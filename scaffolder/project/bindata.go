// Code generated by go-bindata.
// sources:
// templates/api/main.go.tpl
// templates/cmd/db_migrate.go.tpl
// templates/cmd/main.go.tpl
// templates/cmd/serve.go.tpl
// templates/config/Cfg.go.tpl
// templates/config/workers.go.tpl
// templates/dbschema/main.go.tpl
// templates/foobar/main.go.tpl
// templates/info/main.go.tpl
// templates/initialization/initdb.go.tpl
// templates/initialization/main.go.tpl
// templates/main.go.tpl
// templates/models/query.go.tpl
// templates/version.go.tpl
// templates/workers/chief.go.tpl
// DO NOT EDIT!

package project

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _apiMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5f\x4f\xeb\xc6\x13\x7d\x8e\x3f\xc5\xc8\x4f\x76\x14\xec\xab\xdf\xef\x0d\xa9\x95\xa2\x90\x0b\x48\x40\x50\x12\xd4\x4a\x55\x55\x6d\xd6\x13\x7b\x89\xb3\xe3\xce\x8e\x71\x28\xca\x77\xaf\x76\x6d\x20\xd0\x8b\xaa\xe6\x21\xf6\xce\x9c\x3d\x67\xfe\xba\x51\x7a\xa7\x4a\x04\xd5\x98\x28\x32\xfb\x86\x58\x20\x89\x46\xb1\x45\xc9\x2b\x91\x26\x8e\x46\xb1\x98\x3d\xc6\x51\x34\x8a\x4b\x23\x55\xbb\xc9\x34\xed\xf3\x92\xce\x74\x65\x72\x5d\x99\xf8\x2b\x47\xbe\x37\x45\x51\x63\xa7\x18\xbf\xc0\x10\xbb\x4f\x9e\x5a\x59\x8d\x7c\xb6\x33\x92\x2b\xde\x13\x3f\xe7\xaa\x31\x39\xa3\x2d\x90\xff\x15\x5a\x53\xf9\x35\xa6\xed\x30\x7f\xfa\x5f\xde\x30\x3a\x14\xe7\x69\x3f\x61\x9d\xe1\xb6\x71\x68\x3d\x0d\xb7\x2e\x24\xfc\xf2\x92\x35\x4c\x8f\xa8\xe5\x0f\xab\xf6\x78\x3c\xe6\x9a\xec\xd6\x04\x99\x7f\xfa\x8c\xdd\x52\x1c\xa5\x51\xb4\x6d\xad\x86\x4b\x94\x15\xf2\x13\x72\xa2\xb7\x25\x8c\xfb\x8b\xd9\x6c\x5b\x4e\xa0\xa6\xb2\x44\x86\x71\xaf\x94\xcd\xad\xf0\x73\x0a\x63\xd5\x98\xac\xbf\x02\x2f\xd1\x88\x51\x5a\xb6\xbe\x31\xd9\x1d\x76\xef\x54\xd9\xb4\x31\x13\x28\x51\x96\xd4\x0a\x72\xd2\x93\x4d\x40\x6f\xcb\x34\x8d\x8e\x83\xfa\x67\xff\x47\xb1\x80\x3e\x8d\x29\x05\xdf\xec\xec\x4a\xd9\xa2\x1e\xe4\xe1\xfc\x27\xd0\x55\x10\x1f\x98\xd2\x28\x1a\xe5\x39\x4c\xa1\x24\x2a\x60\xa3\x1c\xc2\x7b\x8b\xc1\x89\xd2\xbb\x68\xc4\xd9\x83\xc3\xe4\xdd\x9e\x2d\xf1\xcf\x16\x9d\x5c\x5f\xa4\x3f\x74\xaa\xfa\xfa\xfe\xc7\x1e\x4d\x4f\xc8\xc8\x6f\xce\x9a\xca\x10\x4c\xcf\x77\x13\xd2\x1a\xb2\xcb\xfa\x53\xea\x23\x34\x5b\x18\xaa\x94\xcd\xad\xda\xd4\x38\x5b\x2c\x57\x3e\xa3\x81\xa6\x44\xf1\x96\x24\x7d\xcd\x36\x8d\x46\xc7\x3e\xb3\x15\x0a\x28\xf0\xe3\x4e\xad\xc0\x93\xaa\x5b\x04\xb2\x20\x15\x02\xf7\xaa\xa0\xc9\x0a\x1e\x04\x12\x2d\x87\x74\x02\x52\x29\x81\xce\xd4\x35\x38\x53\x5a\x55\x07\x1a\xa9\x98\xda\xb2\x02\x2d\x87\xec\x82\x2c\x26\x69\x8f\x3b\xe5\xa9\x94\x0b\x42\x05\x78\x29\x65\x0b\xd8\xb6\x2c\x15\x72\x60\x68\x98\x34\x3a\x67\x6c\x09\xae\xa2\xb6\x2e\x60\xe3\x0b\x4c\x4d\x83\x45\xf6\x21\xc5\x69\x63\x86\x82\xac\x87\xb0\x7f\x86\x6f\x21\x5b\xf1\x0d\xf4\x12\xd9\x45\xcb\x4a\x0c\xd9\xe4\xcb\x4b\xe9\x5b\x75\x4e\x3a\x30\xf8\x12\x81\x71\xcf\xb3\x42\x4d\xb6\x48\x87\x7a\x71\x16\xc6\x22\x89\xf3\x02\x9f\xe2\x09\xf8\xb1\x4b\x38\x8c\x4c\x3f\x2f\xe9\x50\xf4\x4b\x94\x24\xce\x9d\x28\x69\xdd\x2b\xae\xeb\xe7\x6d\x89\xae\x21\xeb\xf0\x17\x36\xe2\x67\x98\x61\x3c\xd8\x43\x74\x3d\xc3\xa8\x5f\xff\x6c\xd5\x6a\x5f\x94\xa4\x9b\x80\xdf\xb4\x6c\xda\x34\x3e\xee\xa3\xff\xcb\xc7\x1e\x78\x85\x8c\x60\x1c\x58\xc4\x02\x0b\x10\x02\x55\x14\x41\x09\xaa\xbe\xd7\xce\xef\x9e\xd1\xb0\x25\x86\xe9\xfd\x35\x74\xc4\x3b\x5f\xf3\x11\x8c\xf3\x28\xf2\x5c\x3e\xb1\x3b\x92\xef\xd4\xda\x22\xf9\xcf\xb1\x0e\xa1\x2e\xd1\xb5\xb5\xbc\xd2\x64\xcb\x60\x4d\xba\xf4\x55\xa1\x5f\x6d\x8e\x8e\x6f\xcb\xda\x8f\xa4\x5f\x49\x76\xd9\x8c\xd8\x9d\x7c\x02\x82\xed\x0e\xbb\x24\xbc\x2c\x1a\xdf\x4b\xe7\xd5\xa6\x75\x4d\x1d\x16\x0b\x36\xa5\xb1\xee\x1c\x00\x7e\xfb\xdd\x09\x1b\x5b\xbe\xc4\xe3\xf8\x38\x79\x87\xdc\xa2\x54\x54\x7c\x82\x5c\xce\xd7\xf1\x04\xe2\xfb\xc5\xaa\x7f\x3e\x84\xc7\xc5\xfc\x66\xbe\x9e\xfb\xb7\xc5\xfd\xfa\x7a\x71\xb7\xfa\x40\x74\x85\xaa\x40\xfe\x44\x34\xd5\x1a\x1b\xf1\x57\xa6\xad\x54\xc4\xe6\xaf\x30\x6f\xde\x30\xf3\xfb\x62\xe5\x6c\xfd\xdc\xa0\x3f\xff\x7a\x36\x5b\x2d\xbf\x9f\xad\x69\x87\xc1\xff\xd8\x49\x6f\x7e\xb8\xbe\xe8\x85\xe6\x87\x86\xdc\x17\x42\x37\xc6\xee\x4e\x59\x6f\xd0\x96\x52\x9d\x04\x38\x63\x2c\xd0\x8a\x51\xb5\x3b\x07\xe1\x16\xbd\xe7\x56\x1d\xa6\x25\x7a\xa6\xd7\xdf\xff\xbf\x7d\x9b\x40\x9e\xc3\xad\x3a\x98\x7d\xbb\x1f\x56\xdd\x92\x80\x29\x2d\x31\x16\xb0\x79\x06\x65\x9f\x81\xb6\xb0\x57\x8f\xc4\xb0\x61\xea\x1c\xb2\x0b\x1d\x3c\x46\x7f\x07\x00\x00\xff\xff\x2f\xd0\x59\x48\x37\x07\x00\x00"

func apiMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_apiMainGoTpl,
		"api/main.go.tpl",
	)
}

func apiMainGoTpl() (*asset, error) {
	bytes, err := apiMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/main.go.tpl", size: 1847, mode: os.FileMode(420), modTime: time.Unix(1593082579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdDb_migrateGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdf\x6b\xdb\x30\x10\xc7\x9f\xad\xbf\xe2\x66\x28\xd8\x23\x73\xd8\x6b\xa0\x0f\x6d\xd2\x8d\xc1\xda\x87\x96\xb2\x87\x31\x86\x2c\x9d\x5c\xad\xfa\x61\xce\x72\xd3\x12\xfc\xbf\x0f\x5b\x76\xe2\x64\x83\xbe\x6c\x30\xf6\x22\x2c\xdd\xdd\xf7\xee\x3e\x97\x5c\xcd\xc5\x23\xaf\x10\x84\x95\x8c\x69\x5b\x7b\x0a\x90\xb1\x24\x55\x36\xa4\x8c\x25\x69\xa5\xc3\x43\x5b\x16\xc2\xdb\xa5\xe1\x4e\x20\xbd\x7b\xd4\x61\xc9\xc9\x7a\x7a\x59\xca\x32\x7d\xcd\xc5\xf8\xea\xc4\xa7\x25\xc5\x9f\x70\x29\x8c\x1e\x12\xec\x76\x45\x4d\xfe\x07\x8a\xf0\xdd\x71\x8b\x5d\xb7\x14\xde\x29\x3d\x44\xfd\x6a\x93\x65\x23\x1e\xd0\xf2\x94\xe5\x8c\xa9\xd6\x09\xb0\xba\x22\x1e\x70\x6d\x65\x96\x83\x30\xba\x58\x7b\x6b\xb9\x93\xb0\x63\xc9\x13\xa7\xbd\x7d\x7c\x3d\x9f\xfb\xec\x58\x92\xdc\x70\x8b\x2b\x80\x74\xf4\x4b\x17\x2c\x49\xee\x1b\x5e\xe1\x0a\x52\x5e\xd7\xe6\x05\x64\x39\x8a\x68\xef\xd2\x05\x63\x49\x72\xd7\x96\x22\x2a\x34\x2b\xf8\xfa\xed\x44\x31\x19\x8e\xbd\x70\x5b\x0f\x9a\xa7\xaa\x6d\x7d\x50\x05\xa9\x09\xc5\xa8\xdf\xbb\x5e\x0c\x97\x15\xf4\x1d\x66\x02\xde\xc6\x0c\x2e\xe0\x73\xc8\x01\x89\x3c\x41\x4c\x92\x08\x55\xc1\xea\x1c\x22\xb3\xe2\x16\xb9\x5c\x0f\x9f\x99\x28\x3e\x1a\x5f\x72\x73\x17\x48\xbb\x2a\xfb\x60\x78\x15\x2d\x79\xce\x62\x28\x12\xf5\xa1\x63\xe3\x9b\xcb\x4c\x96\xc5\x75\xbc\xdc\xd7\x0b\x10\xaa\xca\xa3\xa3\x56\x7d\x4e\x78\x73\x0e\x4e\x9b\x29\x71\x42\x18\x5a\x72\xbd\x25\x3e\x74\x6c\xfe\xec\xb4\x19\xee\xdd\xd0\x50\x3c\x8f\xb9\x48\xbf\x75\x27\x64\x24\xf9\x1a\xfa\x29\x09\x83\xdc\x81\xe4\x81\x97\xbc\x41\x18\x67\xfe\x6f\xb0\xd9\xf8\xad\xfb\xfb\x74\x08\xa5\x3f\xa1\x43\xd8\x60\xf8\xcf\xa0\x1c\x84\xff\xe4\x0f\xf1\x35\xd6\xfd\xd1\xb1\xc9\xe1\x78\x43\xb0\xee\x78\xb1\xf4\xe5\x4c\xff\x4e\x98\x35\xac\x69\xa8\x6c\x02\xb9\x56\x55\x1e\xb1\x5f\x3d\xeb\x70\x35\x11\x17\xbe\x75\x61\x01\x23\xb9\x69\x7b\x4d\x22\x99\x50\x55\xb1\xb9\xec\x27\xe5\xee\x6f\x3f\x2f\x0e\x7b\x20\x67\xbf\x69\xd6\xf8\xaa\xd8\xa0\xe2\xad\x09\xc5\x17\x1d\x1e\x86\x2c\x19\x12\xe5\x45\xfc\x4c\xaf\xa7\x8d\xd2\x80\xe2\xda\xa0\x4c\x7b\x72\x63\x9f\x7d\x71\x37\xb8\xdd\xd7\x97\x29\x1b\x8a\xbb\x9a\xb4\x0b\x2a\x4b\x0f\xcb\xe8\x6c\x1f\x3c\x2f\x68\x01\xef\x73\x36\xb0\x9d\x97\xf1\xc9\x29\x7f\xac\x73\x51\xd7\x46\xa3\x84\x33\xd9\x0b\xcd\x16\x27\x8c\x2c\x0e\x92\x39\x9b\xcf\xa8\x63\x3f\x03\x00\x00\xff\xff\x31\x1c\x55\xda\x8c\x06\x00\x00"

func cmdDb_migrateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdDb_migrateGoTpl,
		"cmd/db_migrate.go.tpl",
	)
}

func cmdDb_migrateGoTpl() (*asset, error) {
	bytes, err := cmdDb_migrateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/db_migrate.go.tpl", size: 1676, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x31\x4b\x04\x31\x10\x46\xeb\xcc\xaf\x18\x52\xdd\xe1\x92\xed\x0f\xac\x16\xb4\xb3\x11\x6c\xc4\x22\x97\xcc\xc6\x60\x26\x39\xb2\xc9\x81\x2c\xf9\xef\x92\x5b\xc5\x15\xbb\x99\xf7\x8a\xef\x5d\xb4\xf9\xd0\x8e\xd0\xb0\x05\xf0\x7c\x49\xb9\xa0\x74\xbe\xbc\xd7\xb3\x32\x89\xc7\x9a\x67\x7d\xa5\xd1\x04\x2f\x01\xe6\x1a\x0d\x3e\x52\x99\x12\xb3\x8e\x76\x39\x1c\xf1\xf5\xcd\x04\xaf\xbe\x01\xae\x20\x32\x95\x9a\xe3\x5f\xbe\x82\x10\x0b\xe5\x2b\x4d\x6c\x0f\xc7\x01\x84\x58\x57\x3f\xa3\xb2\x67\x6c\x0d\x84\x60\xef\xb2\x2e\x7b\x4b\xd1\x76\xd3\xa0\x01\x98\x14\x97\x82\x0f\x41\xbb\x29\xc5\xd9\x3b\xbc\x47\x69\x6e\xd7\x2e\xa9\xeb\xdf\x9e\xfe\xfd\x8b\xe9\xb0\x97\xf4\xfb\xb9\x64\x1f\xdd\x0f\x11\x4f\x9a\xe9\x84\xfb\x8d\x3b\x94\x03\x1a\xd9\x6b\xc4\x8b\x0e\x95\x4e\x28\xd5\xb8\xcd\xaa\x4f\xcd\xe1\xa6\xda\xb0\x35\x7e\x05\x00\x00\xff\xff\x0f\x4d\x29\xe0\x46\x01\x00\x00"

func cmdMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdMainGoTpl,
		"cmd/main.go.tpl",
	)
}

func cmdMainGoTpl() (*asset, error) {
	bytes, err := cmdMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/main.go.tpl", size: 326, mode: os.FileMode(420), modTime: time.Unix(1593100894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdServeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcb\xae\xd3\x40\x0c\x86\xd7\xe3\xa7\xb0\x66\x95\x70\x4a\xb2\xaf\x74\x16\xa8\x12\x88\x0d\x0b\x10\x62\x89\x06\xd7\x99\x9a\xce\x25\x72\x26\xe5\x52\xe5\xdd\xd1\x34\x01\x9d\x8a\x2e\x63\x7f\xbf\xf3\xfd\x33\x3a\x3a\x3b\xcf\x48\xf1\x08\x20\x71\xcc\x5a\xb0\x01\x63\xbd\x94\xd3\xfc\xad\xa3\x1c\xfb\xe0\x12\xb1\xbe\x3e\x4b\xe9\x9d\xc6\xac\xbf\xfa\x90\xbd\xbd\x67\x66\x1d\xdc\x85\x7b\x0a\x62\x01\x8c\xbd\x5e\xbb\x51\xf3\x77\xa6\xf2\x35\xb9\xc8\xcb\xd2\x53\x4e\x83\xdc\x52\xff\xef\x24\x49\x11\x17\xe4\xb7\x2b\x92\xd3\x63\xe6\x47\xd6\x33\xeb\x64\xa1\x05\x18\xe6\x44\x38\xb1\x5e\xf8\x10\x8f\x4d\x8b\x14\xa4\x3b\xe4\x18\x5d\x3a\xe2\x15\xcc\xc5\xe9\xb6\xdd\x66\xcf\x2f\x89\x2b\x18\xf3\xc1\x45\xde\x23\xa2\xbd\x61\x76\x07\xc6\x7c\x9e\x9c\xaf\x33\x3b\x15\xa7\x65\x42\x8b\x4f\xb8\x3a\x77\x9f\x58\x2f\x42\x5c\x43\xf8\x84\x16\xff\xaa\xd4\xd8\x1b\xaa\xca\xfb\xf5\x7f\xeb\xc7\x0e\xcc\x02\x46\xb9\xcc\x9a\xee\x3c\x60\x79\xa9\xbe\xc2\x0d\xe1\xab\x55\x2e\x15\xfe\x59\x5a\x64\xd5\xac\xb5\x05\x0d\x1e\xf7\xcf\x78\xff\x36\xdd\xfb\x24\xa5\xa1\x16\xc0\x84\xec\x3d\x6b\x45\x42\xf6\xdd\x3b\x2e\x4d\xdb\x7d\x91\x72\x7a\x2b\x1c\x8e\x8d\x75\xe3\x68\x77\x0f\x1a\xd4\x28\x9d\x84\x87\x9a\xdc\x9a\xdc\xae\x1e\xea\xb0\x59\xaf\xee\x90\x06\xdf\x6e\x60\xf7\x71\x4e\x4d\xfb\xaf\x51\x92\x00\x0b\xfc\x09\x00\x00\xff\xff\x50\x20\x83\xd2\x37\x02\x00\x00"

func cmdServeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdServeGoTpl,
		"cmd/serve.go.tpl",
	)
}

func cmdServeGoTpl() (*asset, error) {
	bytes, err := cmdServeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/serve.go.tpl", size: 567, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCfgGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xcd\x6e\xe3\x36\x10\x3e\x8b\x4f\x31\xd5\x61\x21\x17\x8e\x04\xf4\x68\xc0\x07\x27\xde\x00\x5b\x64\x53\x20\x3f\xcd\xa1\x28\x6c\x5a\x1a\xc9\xac\x29\x52\xa5\x48\x7b\xb3\x81\xdf\xbd\x18\x52\xb2\xe5\xc4\xe9\x6e\xbb\x3a\x18\xd2\xfc\x7c\x33\x9c\x99\x6f\xe8\x86\xe7\x1b\x5e\x21\xe4\x5a\x95\xa2\x62\x4c\xd4\x8d\x36\x16\x12\x16\xc5\x42\x67\x42\x3b\x2b\x64\xcc\x58\x14\x57\xc2\xae\xdd\x2a\xcd\x75\x9d\x55\xfa\x42\x7f\xfd\xaa\x33\xfa\xb9\xd8\x72\x29\x0a\x6e\x85\x56\xf1\xa9\x95\xe4\x2a\x47\x73\xb1\x11\x36\xe3\xa6\xd6\xe6\x39\x93\xba\x7a\xdf\xc6\xed\x30\xdb\xfe\x12\xb3\xe8\xe5\x45\x94\x90\xf2\x46\xec\xf7\xdf\x30\xce\x1a\x83\x2d\xda\x36\xe3\x8d\xf0\x8e\xa8\x8a\xd7\x4e\xad\x30\xae\x69\x51\x51\x70\xe3\x5a\x1f\x5f\x37\x9b\x2a\x15\x2a\x7b\xe6\xb5\x4c\x29\xe6\x88\xb1\x5c\xab\xd6\xc2\x3d\x9a\xad\xc8\xf1\x96\xd7\x08\x53\x88\xdb\xf0\x79\xd1\xe6\xbc\x2c\xb5\x2c\x62\xc6\xb2\x0c\xae\xca\x0a\x6a\x2e\x14\xb4\xd6\xb8\xdc\x3a\x83\xa0\x4b\xb0\x6b\x04\xde\x34\x5d\x21\x9d\xf1\x25\x49\x99\x7d\x6e\xd0\x7b\x04\x63\x78\x61\x00\x00\x27\x67\x9c\x35\x82\x64\xc0\x1b\x91\x5e\x79\x6f\x00\x58\xfe\xd5\x6a\x35\x89\xe9\x64\x40\x79\x86\xd7\xe5\xf1\x94\x7d\xa1\x8a\x15\x61\xcc\x2f\x3d\x04\xcc\x2f\x29\x56\xf7\x74\x18\xc5\xaa\x87\x28\x56\xf1\x12\x8e\x4f\x96\xc1\xfc\x12\x44\x0b\x1c\x0a\x6e\xf9\x8a\xb7\x7e\x0e\x14\xe6\x94\x3b\x65\x2c\x54\x95\x0e\x0a\x7b\xa3\x03\xb6\xd4\xd5\x9b\x4c\xa9\xb9\x5d\x18\x7a\x5d\x32\x16\xcd\x71\xfb\x59\x17\x08\xc3\x67\xa5\xb5\x3c\x24\x86\xdb\x45\xad\x0b\x3c\xa4\xd7\x7f\x2f\x59\xd4\x75\xa2\xfd\xa4\x84\x7d\x10\x35\x6a\x67\x41\x28\x7b\x08\xd7\xbe\xd5\xf7\x30\xbd\x6a\x21\x94\xb0\x0b\xdb\x29\x29\xa1\x2c\x83\x27\x6d\x36\x68\xda\x70\x6a\x29\x5a\x4b\xbd\xdb\x05\xa1\x37\xb0\x6b\x6e\xa1\x76\xad\x85\x15\x42\x6b\xb9\xb1\x58\x8c\xc3\x0b\x70\x29\x41\x94\x80\x75\x63\x9f\x53\x16\xf5\x58\x7f\xfc\xe9\x76\x98\x86\x2f\x3f\x3a\xcb\x90\x48\x07\x1b\x2f\xd9\x9e\xb1\xd2\xa9\x1c\x92\xbc\xac\x68\x1a\x46\xf0\x7b\xa0\x0d\x26\x23\x40\x63\xb4\x81\x17\x16\x19\xb4\xce\x28\x38\x32\x2a\xed\xad\xee\xfd\xf0\x24\x1f\xf2\xb2\x1a\xb3\xe8\x38\x41\xa1\xf9\xd1\xc0\xe3\x5a\xa0\x2c\xbc\x61\x3a\xbf\x1c\x0f\xb1\xee\xf0\x6f\x27\x0c\x16\xa3\x31\x8b\x06\x53\x74\xca\xb7\x77\xa0\x66\x8d\xf8\x2e\xac\xf3\xde\x67\x7a\xf9\x3e\xda\x79\x88\xae\xd4\x63\xf8\x10\xde\x3e\x7e\x11\xad\xbd\x73\x12\x5f\x58\x14\x45\xb3\x2d\x17\x92\xaf\x24\x76\x66\x13\x78\x2d\x21\xe4\x3d\xe1\x8f\xce\xf4\xe2\x5a\x48\x39\xc7\x92\x3b\x69\x3b\xf3\x64\x44\xfd\x28\xb5\x81\x0d\x4c\xa6\x60\xb8\xaa\xf0\x0d\x26\x99\x44\x83\xe4\x60\x4a\x0b\x00\x55\x91\x9c\x64\xbc\x19\xb1\x68\x4f\x51\x07\x2d\xf3\x5b\x21\x70\xf5\xb0\x17\xa2\x2b\xad\xd4\xe3\xdd\x8d\xa7\x49\xe0\x5e\x3f\xec\x44\xca\x85\x33\xb2\x9f\xf0\xc3\xf7\x12\xb2\xec\x61\x8d\xff\x4e\xdf\x37\x14\x1a\x6c\x86\x33\xf4\x79\xc5\x1a\xe2\xc4\xcc\x59\xfd\x59\x54\x86\x5b\xa4\xf9\x5f\x5a\xe3\x70\x09\xf8\x05\x73\x67\x11\x8a\x15\xd4\x9d\xd2\x35\xe0\x23\x73\x63\x53\x16\x0d\xdd\x86\xbc\xe7\xce\xea\x45\xe7\x72\xd8\x6e\x43\xd9\x92\x45\x4f\x5c\xd8\x6b\x6d\xfc\x5e\x1b\xfa\xee\xb8\xb0\x8b\x52\x9b\xc5\x71\xab\x0d\x45\xaf\xa8\xe6\x4b\xfc\x63\x64\x7b\x67\x20\xbb\x66\xfd\xd7\x39\xfe\x1e\x0a\xd0\x88\x1e\x38\xe5\xcf\x72\x87\xbc\x08\xfb\x36\x69\xb8\x5d\x77\xad\x1d\xf9\x7b\x85\x8e\xc2\x77\x41\x3b\xa6\xe3\xd1\xc0\x86\x7b\x3b\x25\xbf\x6b\x21\xd1\x7b\x8d\x58\x44\xbb\xcb\x18\xf8\x69\x0a\x4a\x48\x3f\xbe\xe1\x56\x4c\x6f\x71\x97\x8c\xd2\x27\x61\xd7\x1f\xa9\x3e\x09\x1a\x33\x4a\x89\x59\x24\x0a\xe9\xc7\x84\x11\x8f\xc1\x43\x79\xdd\x35\xb7\x5c\x26\xb1\x53\xc4\x09\xb0\x1a\x0c\xf2\xa2\xbb\xff\xa0\x14\x12\x63\x3f\xf9\x2c\xea\x44\x93\x29\x28\xdc\x25\xd4\x11\x16\x51\x1e\x53\xdf\xc0\xf4\x51\xd5\xdc\xb4\x6b\x2e\x93\xc1\x41\x82\xcf\x8f\xe6\x6c\xf8\x6e\x11\x90\xe2\x31\x1c\xd0\xdf\x49\xdf\xf5\x79\x9c\x3b\x43\xc8\x37\x28\xd2\xe3\x3c\xfd\x9f\xfc\xba\xc0\x9f\x94\xef\xff\xe9\x1f\x86\x3e\xdc\x22\xb4\x72\xea\xaf\x5a\x1a\x9a\xe4\x78\xe7\x52\x8c\x59\xd3\xd0\x4d\x33\x81\x3e\xa5\x1b\x4d\x5b\xda\x0b\x69\xfa\x6e\x70\x8b\x72\x42\x54\x1f\xe8\xbd\x90\xb4\xf7\xa8\xac\x79\x9e\x9c\x6a\x83\x90\xd4\xb3\xa2\x78\x30\x3c\xc7\xc9\x09\x78\x27\x24\x83\x5f\xef\x7f\xbb\xf5\xe0\x43\x03\x12\x8e\x59\xb4\xff\x76\x4d\xfa\x26\x9d\xaf\xcb\xe3\xa1\x21\xb4\x89\xa8\x00\xa1\x28\x3d\x63\x7f\xee\xfe\xaa\xee\xd9\x3f\x01\x00\x00\xff\xff\x7d\x43\xe1\x82\xbc\x0a\x00\x00"

func configCfgGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configCfgGoTpl,
		"config/Cfg.go.tpl",
	)
}

func configCfgGoTpl() (*asset, error) {
	bytes, err := configCfgGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/Cfg.go.tpl", size: 2748, mode: os.FileMode(420), modTime: time.Unix(1593086784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configWorkersGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x4f\x6b\xdb\x4e\x10\x3d\x6b\x3f\xc5\xfc\x74\xf8\x55\x6a\x1d\x19\x7a\x74\xf1\x21\xa1\x29\x84\x42\x5a\x5a\x48\x0f\xc1\x84\xf5\x7a\x64\x2f\x92\x76\xc5\xec\x4a\x6e\x50\xf4\xdd\xcb\x68\x6d\xc7\x7f\x84\x75\xd4\xce\x7b\x6f\xde\x9b\x99\x5a\xaa\x42\xae\x11\x94\x35\xb9\x5e\x0b\xa1\xab\xda\x92\x87\x44\x44\x31\x12\x59\x72\xb1\x88\x62\xc2\xbc\x44\xe5\x63\x21\xa2\x78\xad\xfd\xa6\x59\x66\xca\x56\xd3\x52\x1a\x85\x74\x53\x68\x3f\x6d\xb6\x38\x6d\x3f\xc7\x22\x15\x42\x59\xe3\x06\x82\x3f\x96\x0a\xa4\x07\x93\xdb\xdf\x48\x2d\x12\x34\x5b\xcc\xc2\xcf\x47\x59\x21\xcc\x21\xd6\x26\xb7\x37\x6e\x78\x8d\x45\xd4\x75\x3a\x87\x4c\xd6\xba\xef\xf7\xe8\xdb\x9f\x0f\x3b\xf0\x08\x5a\xd6\xfa\x18\x8c\x66\xc5\xc0\xc0\xb2\x5a\xbe\x93\x7c\xbd\xfb\x8e\x58\x33\xc7\x08\xc9\x6a\x79\x53\x0c\xaf\x97\x1c\x4e\x57\x75\x89\x2f\xdb\xa1\xfe\x9d\xee\x9b\xb5\x77\x92\xc9\xc6\xe8\x72\x6b\x97\xf2\x98\x2b\x15\xa2\x95\x04\xb7\xad\xd4\xa5\x5c\x96\x18\xca\x1d\xcc\xa1\x92\xf5\xf3\x29\xc1\xc2\x79\x6a\x94\xef\xfa\xee\x32\xbd\x19\x74\xfd\xe4\x9a\xbb\x19\xc0\xbe\xe4\xc4\xc5\x78\x9e\xb3\xf1\xe2\xab\x96\x67\x83\xe7\x13\x58\x2f\x84\x7f\xad\x11\x42\xd9\xfd\x5f\xed\xfc\xaf\xa6\x44\x08\x46\xa0\x13\x51\x85\xce\xf1\x82\x1d\x3e\xe7\x49\x9b\xb5\x88\x2e\x12\xb9\x92\x07\xeb\x4c\xa7\xf0\x24\x4b\xbd\x92\x1e\x41\x6d\x50\x15\x0e\xfc\x46\x7a\xe0\x0d\xd0\x0a\x01\x59\x1c\xac\x01\xbf\x41\x70\xaf\xce\x63\x25\xf2\xc6\x28\x48\x08\x3e\x9e\xf5\x97\x1e\xa8\x92\x56\x96\x0d\x82\x36\x1e\x29\x97\x0a\xbb\x3e\x85\x61\xf1\xb9\x77\x9d\x43\x78\x9e\xcf\xc1\xe8\x12\xde\xde\x60\x77\x0a\xd9\x13\xff\xff\x91\x07\x78\x9a\x3d\xb8\x47\x5d\x26\x29\x83\x22\x42\xdf\x90\x61\x80\x88\x7a\x11\x49\xa2\x09\xd8\x02\x66\xf3\x40\x96\x25\xcf\x8b\x53\x9b\xe9\xa0\xf4\x9f\x2d\x8e\xe1\xe1\xfa\xb2\x47\xdc\x26\xb1\x92\xe6\x83\xe7\x13\x6d\x91\x3c\x94\x83\xcf\x1c\xb6\xbb\xdc\xbc\x85\xe7\x45\x48\x35\x4e\x59\x52\x44\xb9\x25\x78\x99\x40\xcb\xa2\x24\xcd\x1a\x41\xd2\xe0\x88\x85\x5e\xf6\xed\x50\x76\x3e\x83\xb3\xfc\x93\x36\x5d\x7c\x39\x34\x36\xd6\x99\x36\x2d\x07\x79\x18\x82\xe1\x33\x88\xe1\xd3\x6e\xca\x49\x9b\xa6\x22\xe2\x14\xb8\xab\xa3\x60\xc2\x3c\xef\x87\xa0\x1d\x7a\x37\x0c\x2d\xe4\xbe\x5f\x18\xf6\xc0\x7f\xa9\x29\x31\xbb\x32\xc9\x81\x24\xd9\xa3\x82\x6e\x7a\x51\xc7\x0e\x76\xfa\xff\x9f\x3d\xb1\xb7\x1d\x7c\xb6\x57\x9f\x70\xc7\xbd\xf8\x17\x00\x00\xff\xff\x7d\xe2\x34\x8f\x1e\x05\x00\x00"

func configWorkersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configWorkersGoTpl,
		"config/workers.go.tpl",
	)
}

func configWorkersGoTpl() (*asset, error) {
	bytes, err := configWorkersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/workers.go.tpl", size: 1310, mode: os.FileMode(420), modTime: time.Unix(1593096351, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dbschemaMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\x23\x21\x10\x86\xeb\x9d\xa7\x18\xad\xae\xd8\xd5\x2d\xd0\xbb\x3b\xc9\xed\x55\x6e\xd3\x00\x3b\xc6\xc8\x86\x71\x06\x36\x51\x64\xf9\xdd\x23\x63\x6f\xe4\x44\xa1\x1a\x3e\xfe\xf9\xf5\x71\xb6\xfe\x68\x03\xe1\xec\x8a\x3f\x50\xb2\x00\x31\x9d\x59\x2a\x0e\xd0\xf5\x21\xd6\xc3\xe2\xb4\xe7\x64\x4e\x36\x7b\x12\x75\x8c\xd5\x58\x49\x2c\x1f\x66\x76\xfd\xf7\x88\x2c\x8e\xf2\x9b\x29\xaf\x27\x95\x62\x10\x5b\xa9\x87\x11\xc0\x98\xc0\x18\xa8\xa2\x5a\xf0\xf7\xc2\x3d\x4b\xa0\x7b\x70\x13\x28\xd3\x6d\x15\x1b\x44\x17\xf3\x6c\xab\x45\xa5\x62\xc8\x2c\x84\xfa\xef\x8b\x0e\xfc\x07\x95\x3a\x1f\xc3\x97\x35\x2a\x5e\xa3\x3a\x30\xaa\x88\xda\x68\xad\x7f\x54\x06\xde\xa7\x8a\xea\xfd\x29\x0a\xb0\x5f\xb2\xc7\xff\x77\xdf\xc1\x73\xce\xbb\x2a\x58\xaa\xc4\x1c\x26\x9c\xa3\xe0\xec\xf4\xe3\x79\x1b\x65\xc4\x21\xe6\x3a\x21\x89\xb0\x8c\x78\x81\x6e\x76\x7a\x47\xf5\x5f\x29\x54\xcb\xf0\xf8\xb7\x6e\xd7\xfb\x56\xe4\xbc\xe3\x45\x3c\x5d\xa0\xeb\x1a\xdf\x20\x22\xb6\x69\x5a\xd1\x36\xca\x06\xd7\xe9\x46\x1b\x68\xa7\x4f\x6b\x4d\xe9\x27\xe8\xae\x23\x74\x42\x75\x91\xfc\x24\xb6\x7a\x37\xe1\x11\xae\xf0\x19\x00\x00\xff\xff\x9f\x7a\xa8\x60\xd6\x01\x00\x00"

func dbschemaMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_dbschemaMainGoTpl,
		"dbschema/main.go.tpl",
	)
}

func dbschemaMainGoTpl() (*asset, error) {
	bytes, err := dbschemaMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dbschema/main.go.tpl", size: 470, mode: os.FileMode(420), modTime: time.Unix(1592388172, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _foobarMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x8b\xdb\x40\x0c\xc5\xcf\xd2\xa7\x10\x3e\x94\xf1\x92\x75\xa0\xc7\xd0\x9e\xd2\x1e\xf6\x12\xca\x6e\xa1\x67\xef\x44\x76\x07\xdb\x23\x23\x6b\xd6\x09\x21\xdf\xbd\xf8\x0f\xdd\x04\x72\x32\x96\xf4\x7b\xef\xcd\xeb\x4b\xdf\x94\x35\x53\x25\xf2\x5e\x2a\x62\xe8\x7a\x51\x23\x87\x90\x59\xe8\x38\x43\x84\xac\x0e\xf6\x37\xbd\x17\x5e\xba\x6d\x5b\x46\xcf\xfa\xdc\x04\xdb\xa6\x91\xb7\x1f\x5f\xb3\xfb\xfd\x10\x34\xf5\x03\xc7\x6d\x2b\xb5\xa6\x21\xc3\x1c\xd1\xce\x3d\xd3\x1f\xd1\x86\x95\x06\xd3\xe4\x8d\x2e\x08\xb1\xec\x98\x88\xd2\xc8\xc5\xb2\x3b\x94\x1d\x23\xb4\x52\xd7\xac\xf4\xb4\xf0\xc5\xcf\x68\x7a\xc6\x2b\x62\x95\xa2\xa7\x03\x8f\xcb\xad\x9b\xe9\x7b\x76\x43\x8f\xd8\x9c\x9e\x56\xeb\x0b\x82\xb2\x25\x8d\xf4\x65\x99\x5c\x10\xe6\x14\x3b\x22\x9a\xbe\x1b\x84\xd5\x7e\xb7\x4a\x6d\x10\xae\xff\xcd\xdd\x71\x7d\x44\x4e\x2f\x31\x98\xcb\x89\x55\xe5\x56\x37\x86\xf6\xd1\xf5\x6b\x8a\x6e\xdc\xdb\x69\xce\xbb\x97\x68\x7c\xb2\x1b\xd8\x82\x9f\xe2\xed\xbe\xd3\x54\x78\x71\xe0\xf1\xf7\x3c\x71\xf3\xef\x1b\x7b\x89\xc7\x1c\x11\xaa\xe5\x1c\x06\x6e\x79\xa9\x10\x7c\x39\x30\x7d\x7b\x5e\x14\x8a\xfd\x0e\x01\xe0\x58\x2c\xd9\x8b\x97\x58\x89\xcb\x7e\xb1\x56\xa2\x1d\x75\x67\xb2\x72\x68\xb2\xfc\x13\x9b\x32\x15\x3f\x24\xb2\xcb\x67\x72\x95\x79\x33\xe9\x5d\xfe\x40\xea\x95\x3d\x87\x0f\x26\x3e\x05\x23\x2f\x47\xde\xd0\x60\xd2\xd3\x28\xda\x84\x58\xcf\xd2\xb7\x55\x00\x5c\xa7\xfe\xf0\x8a\xff\x02\x00\x00\xff\xff\xc2\xf2\xd5\x7e\x65\x02\x00\x00"

func foobarMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_foobarMainGoTpl,
		"foobar/main.go.tpl",
	)
}

func foobarMainGoTpl() (*asset, error) {
	bytes, err := foobarMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "foobar/main.go.tpl", size: 613, mode: os.FileMode(420), modTime: time.Unix(1592394618, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _infoMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x0a\x02\x31\x0c\x40\xe7\xcb\x57\x84\xce\xfa\x03\x07\x0e\xba\xb9\x8b\x73\x63\xaf\x2d\xd5\xa3\x0d\x4d\xaf\x20\x72\xff\x2e\xf1\x36\x35\xe3\x7b\x09\x79\x4c\xee\x41\xd1\x63\xca\xa1\x00\xb4\x27\x7b\x3c\xe7\x50\x50\x5a\x5d\x5c\xc3\x17\x0c\x47\x66\xd4\x91\x56\x53\x8e\x68\xef\x52\xf2\x68\x88\xd9\x58\x18\xae\xbe\x4a\x2a\xf9\x4b\xf6\x8d\xea\xc2\x85\xe2\x9f\xeb\x46\x51\xe5\x69\x49\xf3\xf4\x23\x6f\x4a\x8d\x85\x15\xa0\x53\x45\xfd\x7f\xf8\x44\x6d\x31\x23\x1a\xf1\xb5\x27\xe7\xf7\xe2\x28\x84\x32\x4f\x66\x07\x2b\xbc\x03\x00\x00\xff\xff\x04\x58\x40\xc4\xca\x00\x00\x00"

func infoMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_infoMainGoTpl,
		"info/main.go.tpl",
	)
}

func infoMainGoTpl() (*asset, error) {
	bytes, err := infoMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "info/main.go.tpl", size: 202, mode: os.FileMode(420), modTime: time.Unix(1593086784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationInitdbGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xb1\x4e\xc3\x40\x0c\x86\xe7\xde\x53\x58\x37\xb5\x15\x5c\x9e\x80\xa5\x0d\x03\x12\x2c\x48\xcc\xc8\xb9\x38\x87\x69\x62\x47\xce\x1d\x52\x89\xf2\xee\x28\x69\x17\x46\x4b\xdf\xe7\xff\x1b\x31\x5e\x30\x11\xb0\x70\x66\xec\xf9\x17\x33\xab\x38\xc7\xc3\xa8\x96\x61\xef\x76\x3e\x71\xfe\x2a\x4d\x88\x3a\x54\x3d\x4a\x24\x7b\xbc\x70\xae\xd0\x06\xb5\x6b\xd5\x36\xfe\x3f\x32\xb1\x95\x71\x22\xa9\x7a\x4d\x56\x26\xef\xdc\xce\xcf\x73\x18\x4d\xbf\x29\xe6\x4f\xc1\x81\x96\xa5\x8a\x2a\x1d\x27\xef\x0e\xce\xfd\xa0\xad\x33\xf5\x09\x60\xab\x78\xd3\xb6\xf4\x04\x4f\xe0\x5b\xcc\xd8\xe0\x44\x10\x55\x84\xe2\x1a\xb6\x19\x5d\x91\xb8\xa1\xf5\x1d\xd8\xc7\x2e\xc1\xf1\xf6\x33\x9c\xbb\xf4\x00\x24\xd9\xae\x70\xbc\x35\x84\xe7\xf5\x3a\x00\x99\xa9\xc1\xec\x76\x46\xb9\x98\x40\xdb\x84\x17\xe1\xbc\xda\xa1\x3e\x85\xb3\x8a\x7c\xbc\xbf\xde\xe5\x83\x5b\xdc\x5f\x00\x00\x00\xff\xff\xdc\x49\x35\x74\x1d\x01\x00\x00"

func initializationInitdbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationInitdbGoTpl,
		"initialization/initdb.go.tpl",
	)
}

func initializationInitdbGoTpl() (*asset, error) {
	bytes, err := initializationInitdbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/initdb.go.tpl", size: 285, mode: os.FileMode(420), modTime: time.Unix(1593087590, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xe3\x36\x10\x85\xcf\xe4\xaf\x98\x15\xb0\xad\x94\xaa\x34\x7a\xe8\x65\x01\x1d\x12\x7b\xbb\x08\xd0\xbd\x24\x5d\xec\xa1\x28\x0a\x9a\x1a\x2a\x6c\x28\x52\xa0\x46\x49\x5d\x41\xff\xbd\x20\x29\x27\x4e\x6a\x64\x7b\x92\x2d\x3e\x7d\x33\xf3\xe6\x49\x83\x54\xf7\xb2\x43\x30\xce\x90\x91\xd6\xfc\x23\xc9\x78\xc7\xb9\xe9\x07\x1f\x08\x4a\xce\x0a\xdd\x53\xc1\x59\x31\x1e\x9c\x8a\x57\x32\x3d\x16\x9c\xb3\xa2\x33\x74\x37\xed\x85\xf2\xfd\xc6\x4a\xa7\x30\xfc\x78\x6f\x68\x23\x43\xef\xc3\x61\x63\x7d\x57\x7c\x4b\x43\xde\xdb\xf1\x95\x6a\x34\x61\x1a\x46\x74\x11\x10\xa6\xd7\xa7\x53\xd0\xf2\x01\x37\xca\x9a\xd4\xc1\x3c\x8b\x21\xf8\xbf\x50\xd1\x9f\x4e\xf6\xb8\x2c\x1b\xe5\x9d\x36\xa9\xf2\x7f\xcf\xda\xfd\xa8\xee\xb0\x97\x05\xaf\x38\xa7\xc3\x90\x87\xfe\xec\xdb\xc9\x22\x8c\x14\x8c\xeb\x38\xe7\xca\xbb\x91\x40\x5b\xd9\x6d\x13\x0b\x1a\x28\x8e\xd4\x7c\xd6\xa2\x96\x93\xa5\x6b\x67\xe8\xda\x11\x86\x07\x69\xa1\x81\x9f\xe1\x02\xa2\x35\xe2\x16\x95\x77\x2d\xe7\x7a\x72\x0a\xa2\xa8\x54\x70\xa1\xac\x11\x5b\xef\x08\xff\xa6\x0a\x2e\x32\x4f\x6c\x75\x07\x33\x67\x0f\x32\xa4\x4e\x72\xbd\x11\x1a\xe8\xe5\xf0\xfb\x73\x6f\x7f\x44\x52\x79\xf2\x50\x0d\x17\xd9\x1d\xf1\xd1\x51\x38\x54\x80\x21\xf8\x30\x73\x06\x00\x30\xcf\x46\x83\x68\xf7\xcb\xc2\x19\xdb\x5d\x7d\x00\x48\xf0\x9d\x24\xb9\x97\x23\xd6\x9c\xb1\x79\x46\xd7\xc6\xf3\x85\x73\xa6\x74\x07\x1f\x1a\x58\xe9\x37\x28\xdb\xdc\x47\xa9\xc4\x27\xeb\xf7\xd2\xde\x26\x67\xca\x67\x47\xaa\x8a\x73\xf6\x98\x9e\x8a\x99\x10\x5f\xa5\xa1\x4f\xc1\x4f\xc3\xbc\x70\xa6\x7d\x80\x3e\xb5\x5d\x3f\x67\x0a\x43\x14\x07\xe9\xd6\xa0\x1d\x27\x9d\x39\x4b\xd3\x47\xdf\xfc\x44\xd9\xbf\xdd\x14\x72\x06\x19\x33\x7a\x65\x41\xd3\xc0\xee\x2a\xe9\xd9\x51\xdc\xbc\x94\x97\x4a\x77\x62\x77\x25\xa2\xe3\xbf\x65\x49\xf5\x6a\x25\x8c\x2d\x80\x76\xc4\x6f\x73\x6e\x31\x3c\x18\x85\xe3\xdb\x30\xce\x19\x7b\xec\xc4\x65\xdb\x96\x3f\x45\x4f\x58\xe7\x21\xed\x6a\x6d\xfa\x79\x85\x2f\xbd\xf8\x7f\xfb\xac\xcf\xdb\x52\xe5\xee\x5b\xd4\x18\xe0\xb1\x13\x3b\xef\xb0\xac\xe2\x2d\x7f\x1f\x5d\x4e\x2f\x95\xb8\x41\x0a\x87\x6b\xa7\x02\xf6\xe8\x48\x5a\x7b\xf8\xe2\xc8\xd8\x32\xea\xd8\x99\x00\xd7\xe9\x60\x2d\x58\xf3\xf4\x2f\xb5\x59\xc1\xde\x7b\x9b\x6b\x32\x86\x21\x6d\xf2\x64\x98\xf2\x3b\x15\x07\xb0\xbe\x13\xbb\x8c\xad\xb2\xd4\xe8\x38\x06\xbc\x6b\xc0\x99\xa7\xe7\xd9\x89\x4e\x7c\x35\x74\xf7\x31\x4e\x5a\x62\x08\x95\xc8\x3f\x8b\xad\x74\xdf\x53\xaa\x00\x05\xfc\xb0\xee\x7f\x65\x2e\xf9\x12\x90\xa6\xe0\x12\xbe\x49\xf8\x74\x7b\x49\x22\xa3\xe1\x9d\xbf\x5f\xeb\x9d\x56\xfb\x45\x92\xb4\x6f\xe1\x23\x7c\x29\xcf\x64\xf7\x69\x11\x55\x7e\x63\x1e\xbb\x14\xf9\xb2\xe2\xfc\xf5\x0b\x67\x34\xac\x31\xbc\x9c\xc8\x7f\x36\x5d\x90\x94\xe3\xa6\xfc\xe4\xa8\x86\xd5\xc0\xe3\xa7\x48\xac\x92\x63\x78\xb7\xde\xb9\x2f\x37\xbf\xd6\x50\x4c\x43\x51\xf1\xb3\x2e\xbe\x61\xe1\x3a\x63\x86\x1a\xef\x46\xd0\xd2\x58\x6c\x13\xea\x68\x5b\x5c\xd8\x31\xbd\xa7\xac\x6b\xa7\x7d\xa9\x7b\x12\xb7\x43\x30\x8e\x74\x59\x5c\x0e\x83\x35\xd8\xc2\xfb\x16\xde\x8f\xd0\x1f\xa9\x45\x0d\xeb\x34\xa9\xcb\xe4\xca\xd3\x37\x85\xbf\x28\xb3\xf0\x7f\x03\x00\x00\xff\xff\x88\x12\xf2\xe9\x60\x06\x00\x00"

func initializationMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationMainGoTpl,
		"initialization/main.go.tpl",
	)
}

func initializationMainGoTpl() (*asset, error) {
	bytes, err := initializationMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/main.go.tpl", size: 1632, mode: os.FileMode(420), modTime: time.Unix(1593087590, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x4e\xc4\x30\x10\x44\x6b\xef\x57\x2c\xae\x12\x9d\xe4\xeb\x41\x29\x22\xa4\xa3\xbb\x02\x04\x2d\x32\xce\xc6\x18\x6c\xaf\x65\x27\x47\x11\xe5\xdf\x91\x13\x9d\xa0\xb8\x72\xe6\x8d\x3d\xb3\x49\x9b\x6f\x6d\x09\x83\x76\x11\xc0\x85\xc4\x79\xc2\x06\x84\xf4\x6c\x25\x08\xc9\x45\x02\x08\x69\xdd\xf4\x39\x7f\x28\xc3\xe1\x38\xe7\x51\x5f\xe8\x68\xbc\xdb\xc8\xb2\xa8\x94\xf9\x8b\xcc\xf4\x1e\x75\xa0\x75\x3d\x9a\x30\xc8\xdb\x80\xe3\xe8\xec\x6d\xe6\xe2\xc8\x12\x5a\x80\x71\x8e\x66\x5b\xd3\xb4\xb8\x80\xd0\x29\xe1\x7d\x87\xc6\x3b\x75\xa6\x9f\x3e\xa5\xa6\xdd\x4c\xf5\x5a\xea\xec\x0e\x65\x8f\x12\x0f\xb8\xff\xad\x5e\x28\x5f\x9c\xa1\xb3\x0e\x84\x07\x94\x58\x76\x2d\xf7\x37\x6f\x94\x8b\xe3\x88\x1d\xd6\x3a\xd5\xff\x59\x3b\x3f\x79\x6d\x0b\x76\x68\xc2\xa0\x9e\x68\xda\xe4\xb5\xef\x91\x43\xd0\x71\xf8\x87\xaf\x4e\x4d\xb8\x11\x29\xe7\xba\xb4\x66\x9f\xe7\xd8\x70\x51\x7d\xb6\xa5\x7d\xd8\xc0\x5d\x87\xd1\xf9\x7a\x90\xf0\x6c\xd5\x49\x4f\xda\x37\x94\x73\x0b\x62\x05\x58\xe1\x37\x00\x00\xff\xff\x8d\x60\x52\x41\x87\x01\x00\x00"

func mainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTpl,
		"main.go.tpl",
	)
}

func mainGoTpl() (*asset, error) {
	bytes, err := mainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tpl", size: 391, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xc1\xaa\xdb\x30\x10\x45\xd7\x9a\xaf\x18\xb2\x28\x89\x69\xed\x7d\x21\xab\x2e\xda\x40\x29\x98\xf6\x03\x32\x96\xc6\xc9\x10\x59\x72\xa5\x71\x43\xfa\xc8\xbf\x3f\x64\x3b\x2f\x59\xce\x68\xce\xb9\x17\x8d\x64\x2f\x74\x62\x1c\xa2\x63\x9f\x01\x64\x18\x63\x52\xdc\x9c\x44\xcf\x53\x57\xdb\x38\x34\x9e\x82\xe5\xf4\xe5\x22\xda\x50\x1a\x62\xba\x35\xae\xdb\x00\x34\x0d\xb6\x07\x94\x8c\x84\x1a\x47\xf4\xfc\x8f\x3d\x4a\x50\x4e\x3d\x59\xc6\x3e\xa6\x65\x22\xab\x12\x03\x5e\x45\xcf\xe8\x48\xa9\xa3\xcc\x35\xe8\x6d\xe4\x99\xff\x00\xde\xc0\xb8\xae\xfe\x93\x28\xe4\x05\x21\x0f\x60\x9a\x0a\x8c\xf9\xc1\x89\x4b\x52\x60\x76\xec\x50\x23\x92\x73\xa8\x67\xc6\xbf\x13\xa7\xdb\x53\x92\xc1\x60\xd5\xc0\x7d\x69\x87\x32\x8c\x9e\x07\x0e\x4a\x73\x85\xd8\xcf\xcc\xb1\x3d\x1c\x9f\xc8\xa3\x0a\x66\x4d\x93\xd5\x52\xa3\x72\x5d\xfd\xbb\xfd\xf9\x2d\x86\xb0\xaa\x7e\xf1\xb5\xc5\xc4\x3a\xa5\x90\x51\x82\xa8\x90\x97\xff\xec\x50\x42\xd6\xf2\x3d\xaf\xee\x1a\xfa\x29\xd8\x99\xd9\xba\xae\x58\xf0\xc5\xb8\xc3\xaa\x2d\x21\xd2\xe3\xfa\xb8\xdf\x63\x10\x5f\x76\xe6\xb1\x41\xd7\xd5\xdf\x59\xcb\xc0\x56\x63\xda\xee\xc0\xdc\xc1\x2c\x0d\xf0\x53\x5b\x6e\x57\xdf\xd7\x55\xf3\xb9\x5c\xdc\xe1\x3d\x00\x00\xff\xff\xab\x75\xc9\xd5\xd0\x01\x00\x00"

func modelsQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsQueryGoTpl,
		"models/query.go.tpl",
	)
}

func modelsQueryGoTpl() (*asset, error) {
	bytes, err := modelsQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models/query.go.tpl", size: 464, mode: os.FileMode(420), modTime: time.Unix(1593082372, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _versionGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x4d\x0e\x82\x30\x10\x05\xe0\x75\xe7\x14\x2f\x5d\xc1\xc2\x8a\x07\x60\xa1\x67\x20\x6e\x4d\x53\x4b\x33\x2a\xd3\xa6\x14\x37\x84\xbb\x1b\xd4\x04\x56\xf3\xf3\x5e\xbe\x64\xdd\xd3\x06\x8f\xc1\xb2\x10\xf1\x90\x62\x2e\xa8\x48\xe9\x79\x36\x29\xc7\x87\x77\xe5\x26\x76\xf0\xcb\x72\x64\xe9\xa3\xa6\x9a\xe8\x6d\xf3\x5a\xb9\xfa\x3c\x72\x14\xb4\xd0\x27\xd3\x98\xe6\x90\x9d\x26\x75\x99\xf8\x75\x07\x30\x96\xcc\x12\x48\x75\x36\x00\xdb\x5d\x13\xf5\x93\x38\xb0\x70\xa9\x6a\xcc\xa4\x56\xd6\x9c\x53\x32\x9b\xf7\xdf\x76\xd9\x4f\x6d\xf1\x9d\xbb\xff\xaa\xb7\xe8\x6c\xa0\x85\x3e\x01\x00\x00\xff\xff\x51\x16\xd7\xbb\xcb\x00\x00\x00"

func versionGoTplBytes() ([]byte, error) {
	return bindataRead(
		_versionGoTpl,
		"version.go.tpl",
	)
}

func versionGoTpl() (*asset, error) {
	bytes, err := versionGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "version.go.tpl", size: 203, mode: os.FileMode(420), modTime: time.Unix(1593082579, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersChiefGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x8a\xdb\x30\x10\x3d\x4b\x5f\x21\x7c\xb2\x17\x57\x86\x1e\x17\xf6\xb0\xdd\x26\x6d\x20\x2d\xa5\x4b\xc9\x31\x68\xe5\xb1\xa2\x46\x91\xcc\x48\x76\x58\x8c\xff\xbd\x58\xb2\xbb\x0d\x0d\x39\xec\xcd\x33\xf3\xde\x9b\x27\xcf\x6b\x85\x3c\x0a\x05\xec\xec\xf0\x08\xe8\x29\xd5\xa7\xd6\x61\x60\x39\x25\x99\xd2\xe1\xd0\xbd\x70\xe9\x4e\x95\x11\x56\x02\x7e\x38\xea\x50\x75\x67\xa8\xfa\x8f\xd9\xe5\xdc\x6b\xec\x5a\x0f\xb6\x32\x4e\x61\xe7\x33\x4a\x49\x36\x0c\xbc\x45\xf7\x1b\x64\xd8\x5b\x71\x82\x71\xac\xa4\xb3\x8d\x56\x19\x25\xc3\xa0\x1b\xc6\x45\xab\xc7\xf1\x0a\x6c\xf6\x52\x89\x56\x67\xc3\x00\xb6\x1e\xc7\x85\xe2\xf5\xa9\x35\xb0\x4f\x88\x9b\xe4\xc6\xb9\x17\x81\x7f\xf9\x05\xa5\x4d\x67\x25\xdb\x58\x1d\x9e\x0e\x1a\x9a\xdc\x38\xa5\x00\xd9\x5d\x72\xcc\x57\x36\xe0\x6b\xc9\x64\xa3\xd8\x5d\xf2\xc9\x9f\x1a\x55\xb0\xee\x0c\x3c\x12\xd8\x40\x89\x8c\x1f\xf7\x0f\xb1\xfb\x1d\xce\x49\xa9\x98\x07\xfc\x97\x87\xcf\xd0\x88\xce\x84\x9f\x20\x5d\x0f\xf8\x36\x7a\x86\xb0\xea\xc1\x86\xaf\xc2\xd6\x06\x30\x9f\xcc\xe4\x30\x75\xa2\x56\x9c\x15\xd3\x0a\xd2\x0b\x64\x06\x7a\x30\x6c\x76\xb6\x9d\x0a\x4a\x88\x3f\xeb\x20\x0f\x2c\x92\x52\x33\xe2\xa5\xf0\x10\x35\xb6\xbd\x59\x8b\x20\x4c\xb9\x54\x2b\x44\x87\xf7\x94\x10\x92\xf4\x1e\x16\xc5\x38\x58\x64\xff\xe5\x6f\x6c\xe3\xae\x11\xa6\xfe\x82\xaf\xd3\x0b\xaf\xc1\x76\x02\xed\x02\x1b\x29\x25\x24\xfd\x63\xbe\xd3\xe1\xb0\xd6\x60\x6a\x9f\x9e\xcc\x53\x51\xf0\x49\x63\xeb\x54\x1e\x75\xca\xf9\x69\xdf\xc0\x7b\xa1\xa0\xa0\x64\x2c\x28\x65\x8c\xb1\x78\x7b\x87\x31\x31\xff\x65\x60\xbe\x63\x34\x71\xb1\x2c\xcf\x44\xdb\xee\x8d\x78\x05\xcc\x4a\x96\xcd\xc1\xc8\x8a\x25\x12\x6f\xd2\x29\x89\xe9\x50\x8f\x75\xbd\x8b\xc8\x7c\x4e\x41\xaa\x1e\x7f\x6c\x9e\x01\x7b\xc0\x92\x89\x56\xf3\x2f\x10\x52\x99\xcb\x46\x95\x57\x56\xa7\x6d\x59\xc9\x2e\x54\xd6\xce\x7d\x12\x58\x14\xc5\xed\x58\xdf\x74\x92\x34\x4a\x96\x02\x3e\xa5\xf0\x16\xea\xfd\xce\x10\x42\x87\x96\x45\x2f\x74\xa4\x7f\x02\x00\x00\xff\xff\x8f\xf9\x3f\xca\x29\x04\x00\x00"

func workersChiefGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersChiefGoTpl,
		"workers/chief.go.tpl",
	)
}

func workersChiefGoTpl() (*asset, error) {
	bytes, err := workersChiefGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/chief.go.tpl", size: 1065, mode: os.FileMode(420), modTime: time.Unix(1593096414, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"api/main.go.tpl":              apiMainGoTpl,
	"cmd/db_migrate.go.tpl":        cmdDb_migrateGoTpl,
	"cmd/main.go.tpl":              cmdMainGoTpl,
	"cmd/serve.go.tpl":             cmdServeGoTpl,
	"config/Cfg.go.tpl":            configCfgGoTpl,
	"config/workers.go.tpl":        configWorkersGoTpl,
	"dbschema/main.go.tpl":         dbschemaMainGoTpl,
	"foobar/main.go.tpl":           foobarMainGoTpl,
	"info/main.go.tpl":             infoMainGoTpl,
	"initialization/initdb.go.tpl": initializationInitdbGoTpl,
	"initialization/main.go.tpl":   initializationMainGoTpl,
	"main.go.tpl":                  mainGoTpl,
	"models/query.go.tpl":          modelsQueryGoTpl,
	"version.go.tpl":               versionGoTpl,
	"workers/chief.go.tpl":         workersChiefGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"api": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{apiMainGoTpl, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"db_migrate.go.tpl": &bintree{cmdDb_migrateGoTpl, map[string]*bintree{}},
		"main.go.tpl":       &bintree{cmdMainGoTpl, map[string]*bintree{}},
		"serve.go.tpl":      &bintree{cmdServeGoTpl, map[string]*bintree{}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"Cfg.go.tpl":     &bintree{configCfgGoTpl, map[string]*bintree{}},
		"workers.go.tpl": &bintree{configWorkersGoTpl, map[string]*bintree{}},
	}},
	"dbschema": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{dbschemaMainGoTpl, map[string]*bintree{}},
	}},
	"foobar": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{foobarMainGoTpl, map[string]*bintree{}},
	}},
	"info": &bintree{nil, map[string]*bintree{
		"main.go.tpl": &bintree{infoMainGoTpl, map[string]*bintree{}},
	}},
	"initialization": &bintree{nil, map[string]*bintree{
		"initdb.go.tpl": &bintree{initializationInitdbGoTpl, map[string]*bintree{}},
		"main.go.tpl":   &bintree{initializationMainGoTpl, map[string]*bintree{}},
	}},
	"main.go.tpl": &bintree{mainGoTpl, map[string]*bintree{}},
	"models": &bintree{nil, map[string]*bintree{
		"query.go.tpl": &bintree{modelsQueryGoTpl, map[string]*bintree{}},
	}},
	"version.go.tpl": &bintree{versionGoTpl, map[string]*bintree{}},
	"workers": &bintree{nil, map[string]*bintree{
		"chief.go.tpl": &bintree{workersChiefGoTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
