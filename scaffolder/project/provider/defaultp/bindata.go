// Code generated by go-bindata.
// sources:
// templates/.gitattributes.tpl
// templates/.gitignore.tpl
// templates/Dockerfile.tpl
// templates/api/main.go.tpl
// templates/build.sh.tpl
// templates/cmd/db_migrate.go.tpl
// templates/cmd/main.go.tpl
// templates/cmd/serve.go.tpl
// templates/config/cfg.go.tpl
// templates/config/version.go.tpl
// templates/config/workers.go.tpl
// templates/dbschema/main.go.tpl
// templates/docker-compose.yaml.tpl
// templates/foobar/main.go.tpl
// templates/golangci.yml.tpl
// templates/initialization/initdb.go.tpl
// templates/initialization/main.go.tpl
// templates/main.go.tpl
// templates/models/query.go.tpl
// templates/workers/chief.go.tpl
// templates/workers/foobar/main.go.tpl
// DO NOT EDIT!

package defaultp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _GitattributesTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4b\xcd\x4b\xc9\x2f\xd2\xd7\x52\x48\xca\xcc\x4b\x2c\xaa\xe4\x4a\x49\x2a\x4e\xce\x48\xcd\x4d\xd4\x4f\xca\xcc\x4b\x49\x2c\x49\xd4\x4b\xcf\x87\x49\xb9\xe7\x17\x64\xa7\xeb\xe5\xe4\x27\x67\x43\x45\x00\x01\x00\x00\xff\xff\x9d\x6d\xc2\x93\x3c\x00\x00\x00"

func GitattributesTplBytes() ([]byte, error) {
	return bindataRead(
		_GitattributesTpl,
		".gitattributes.tpl",
	)
}

func GitattributesTpl() (*asset, error) {
	bytes, err := GitattributesTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitattributes.tpl", size: 60, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _GitignoreTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xcb\x4c\x49\x4d\xd4\xd7\xe2\x4a\xce\xcf\x4b\xcb\x4c\xd7\xab\x4c\xcc\xcd\xe1\xd2\xd2\x4b\xca\xcc\xe3\x2a\x4b\xcd\x4b\xc9\x2f\xe2\x02\x04\x00\x00\xff\xff\x9b\x2b\x96\x74\x21\x00\x00\x00"

func GitignoreTplBytes() ([]byte, error) {
	return bindataRead(
		_GitignoreTpl,
		".gitignore.tpl",
	)
}

func GitignoreTpl() (*asset, error) {
	bytes, err := GitignoreTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".gitignore.tpl", size: 33, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerfileTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4f\x6b\x1b\x31\x10\xc5\xef\xfa\x14\x83\x6c\x72\xaa\xb4\x31\x3d\x34\x04\xf6\xb0\xf5\x3f\x4c\xbb\x5e\xb3\xd9\xa4\x0e\xa5\x87\xb1\x24\x2b\xa2\x5a\xcd\xb2\x2b\x3b\x94\xd2\xef\x5e\xe4\x25\xc5\x3d\xe4\x38\x6f\x66\x18\xbd\xdf\xd3\x04\xe6\xd4\x76\xce\x1b\x18\x22\x5a\xc3\x56\x75\x55\x82\x25\x8f\xc1\xde\xa3\xef\x5c\x30\x50\x3c\xc0\xe1\xe4\xbc\x16\x26\x9c\x59\xfd\xb8\x05\xec\x7e\x02\x6a\x0d\x42\x04\x12\x0a\xd5\x8b\x01\xeb\x22\x63\x45\xbd\x86\x79\x55\x96\x9b\x26\xe7\x21\x43\x7e\x11\x9a\x62\x7d\x55\xcd\xab\xed\x6a\xb3\xce\x79\x8b\x43\x34\x3d\x67\x6c\xb2\xdc\x3e\xc1\xba\xda\xd5\xd5\xfe\x39\xd7\xae\x37\x2a\xb2\x51\x9a\xcd\x66\x65\xb5\x78\xfc\xba\xcc\x29\xb0\xb7\xa9\xcd\x53\xd1\x2c\x73\xeb\xa2\xc7\x83\x54\xd4\x32\xf6\xad\xaa\xbf\x2c\x36\x35\x64\x83\xe9\xcf\x4e\x19\x56\x2c\x16\x20\x41\xb2\x79\xb5\x7b\x06\x99\x99\x70\xce\xa6\xbf\xc7\xbb\x7f\xa4\xa2\x70\x74\x56\xfe\xc2\xd6\x43\x76\x55\x5c\x7c\x59\x82\x96\x34\x68\x7a\x0d\x9e\x50\xc3\xcd\x4d\x92\x2e\xde\x41\x78\x7d\xf4\x68\x07\xe0\x62\x0f\x2d\xba\x20\x3f\x27\x3d\x9f\x8e\x86\xe1\x4d\x6d\xd0\xe6\xd3\xa6\x58\x73\x10\x04\x19\x76\x1d\x48\xc6\x26\xb0\x72\x01\xfd\x35\xe2\x91\xed\xfd\x47\xf9\x29\xb5\x77\xd4\x47\xb8\xbb\xbd\xbb\x85\x83\xf1\x14\xec\x00\x91\x80\x4e\x3d\x60\xd7\x79\xa7\x30\xba\xc4\x60\xbf\xab\x1e\x96\x97\xb1\xb4\x53\x78\x4f\xaf\xa0\x8d\x3f\x9b\x34\xdd\x9f\x02\x50\x80\x62\xcc\xec\x80\x83\xd1\xa0\x28\x44\x74\xc1\xf4\x83\x7c\x2f\x38\x85\x42\x99\x3e\xba\x63\xba\x62\x86\xb4\xf8\x72\x05\x95\x8d\x18\x85\x38\xf6\xd4\xe6\xff\xbe\xc1\xe8\x2c\x7b\xaf\xf9\x1f\xe5\xf4\xd6\xfa\x14\x92\x15\x36\x2f\x17\xf0\x9d\xa7\x65\xfe\x01\x78\x4a\xcc\xf0\x1f\xec\x6f\x00\x00\x00\xff\xff\x52\x2a\x9c\xd2\x84\x02\x00\x00"

func dockerfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dockerfileTpl,
		"Dockerfile.tpl",
	)
}

func dockerfileTpl() (*asset, error) {
	bytes, err := dockerfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Dockerfile.tpl", size: 644, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apiMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5f\x4f\xeb\xc6\x13\x7d\x8e\x3f\xc5\xc8\x4f\x76\x14\xec\xab\xdf\xef\x0d\xa9\x95\xa2\x90\x0b\x48\x40\x50\x12\xd4\x4a\x55\x55\x6d\xd6\x13\x7b\x89\xb3\xe3\xce\x8e\x71\x28\xca\x77\xaf\x76\x6d\x20\xd0\x8b\xaa\xe6\x21\xf6\xce\x9c\x3d\x67\xfe\xba\x51\x7a\xa7\x4a\x04\xd5\x98\x28\x32\xfb\x86\x58\x20\x89\x46\xb1\x45\xc9\x2b\x91\x26\x8e\x46\xb1\x98\x3d\xc6\x51\x34\x8a\x4b\x23\x55\xbb\xc9\x34\xed\xf3\x92\xce\x74\x65\x72\x5d\x99\xf8\x2b\x47\xbe\x37\x45\x51\x63\xa7\x18\xbf\xc0\x10\xbb\x4f\x9e\x5a\x59\x8d\x7c\xb6\x33\x92\x2b\xde\x13\x3f\xe7\xaa\x31\x39\xa3\x2d\x90\xff\x15\x5a\x53\xf9\x35\xa6\xed\x30\x7f\xfa\x5f\xde\x30\x3a\x14\xe7\x69\x3f\x61\x9d\xe1\xb6\x71\x68\x3d\x0d\xb7\x2e\x24\xfc\xf2\x92\x35\x4c\x8f\xa8\xe5\x0f\xab\xf6\x78\x3c\xe6\x9a\xec\xd6\x04\x99\x7f\xfa\x8c\xdd\x52\x1c\xa5\x51\xb4\x6d\xad\x86\x4b\x94\x15\xf2\x13\x72\xa2\xb7\x25\x8c\xfb\x8b\xd9\x6c\x5b\x4e\xa0\xa6\xb2\x44\x86\x71\xaf\x94\xcd\xad\xf0\x73\x0a\x63\xd5\x98\xac\xbf\x02\x2f\xd1\x88\x51\x5a\xb6\xbe\x31\xd9\x1d\x76\xef\x54\xd9\xb4\x31\x13\x28\x51\x96\xd4\x0a\x72\xd2\x93\x4d\x40\x6f\xcb\x34\x8d\x8e\x83\xfa\x67\xff\x47\xb1\x80\x3e\x8d\x29\x05\xdf\xec\xec\x4a\xd9\xa2\x1e\xe4\xe1\xfc\x27\xd0\x55\x10\x1f\x98\xd2\x28\x1a\xe5\x39\x4c\xa1\x24\x2a\x60\xa3\x1c\xc2\x7b\x8b\xc1\x89\xd2\xbb\x68\xc4\xd9\x83\xc3\xe4\xdd\x9e\x2d\xf1\xcf\x16\x9d\x5c\x5f\xa4\x3f\x74\xaa\xfa\xfa\xfe\xc7\x1e\x4d\x4f\xc8\xc8\x6f\xce\x9a\xca\x10\x4c\xcf\x77\x13\xd2\x1a\xb2\xcb\xfa\x53\xea\x23\x34\x5b\x18\xaa\x94\xcd\xad\xda\xd4\x38\x5b\x2c\x57\x3e\xa3\x81\xa6\x44\xf1\x96\x24\x7d\xcd\x36\x8d\x46\xc7\x3e\xb3\x15\x0a\x28\xf0\xe3\x4e\xad\xc0\x93\xaa\x5b\x04\xb2\x20\x15\x02\xf7\xaa\xa0\xc9\x0a\x1e\x04\x12\x2d\x87\x74\x02\x52\x29\x81\xce\xd4\x35\x38\x53\x5a\x55\x07\x1a\xa9\x98\xda\xb2\x02\x2d\x87\xec\x82\x2c\x26\x69\x8f\x3b\xe5\xa9\x94\x0b\x42\x05\x78\x29\x65\x0b\xd8\xb6\x2c\x15\x72\x60\x68\x98\x34\x3a\x67\x6c\x09\xae\xa2\xb6\x2e\x60\xe3\x0b\x4c\x4d\x83\x45\xf6\x21\xc5\x69\x63\x86\x82\xac\x87\xb0\x7f\x86\x6f\x21\x5b\xf1\x0d\xf4\x12\xd9\x45\xcb\x4a\x0c\xd9\xe4\xcb\x4b\xe9\x5b\x75\x4e\x3a\x30\xf8\x12\x81\x71\xcf\xb3\x42\x4d\xb6\x48\x87\x7a\x71\x16\xc6\x22\x89\xf3\x02\x9f\xe2\x09\xf8\xb1\x4b\x38\x8c\x4c\x3f\x2f\xe9\x50\xf4\x4b\x94\x24\xce\x9d\x28\x69\xdd\x2b\xae\xeb\xe7\x6d\x89\xae\x21\xeb\xf0\x17\x36\xe2\x67\x98\x61\x3c\xd8\x43\x74\x3d\xc3\xa8\x5f\xff\x6c\xd5\x6a\x5f\x94\xa4\x9b\x80\xdf\xb4\x6c\xda\x34\x3e\xee\xa3\xff\xcb\xc7\x1e\x78\x85\x8c\x60\x1c\x58\xc4\x02\x0b\x10\x02\x55\x14\x41\x09\xaa\xbe\xd7\xce\xef\x9e\xd1\xb0\x25\x86\xe9\xfd\x35\x74\xc4\x3b\x5f\xf3\x11\x8c\xf3\x28\xf2\x5c\x3e\xb1\x3b\x92\xef\xd4\xda\x22\xf9\xcf\xb1\x0e\xa1\x2e\xd1\xb5\xb5\xbc\xd2\x64\xcb\x60\x4d\xba\xf4\x55\xa1\x5f\x6d\x8e\x8e\x6f\xcb\xda\x8f\xa4\x5f\x49\x76\xd9\x8c\xd8\x9d\x7c\x02\x82\xed\x0e\xbb\x24\xbc\x2c\x1a\xdf\x4b\xe7\xd5\xa6\x75\x4d\x1d\x16\x0b\x36\xa5\xb1\xee\x1c\x00\x7e\xfb\xdd\x09\x1b\x5b\xbe\xc4\xe3\xf8\x38\x79\x87\xdc\xa2\x54\x54\x7c\x82\x5c\xce\xd7\xf1\x04\xe2\xfb\xc5\xaa\x7f\x3e\x84\xc7\xc5\xfc\x66\xbe\x9e\xfb\xb7\xc5\xfd\xfa\x7a\x71\xb7\xfa\x40\x74\x85\xaa\x40\xfe\x44\x34\xd5\x1a\x1b\xf1\x57\xa6\xad\x54\xc4\xe6\xaf\x30\x6f\xde\x30\xf3\xfb\x62\xe5\x6c\xfd\xdc\xa0\x3f\xff\x7a\x36\x5b\x2d\xbf\x9f\xad\x69\x87\xc1\xff\xd8\x49\x6f\x7e\xb8\xbe\xe8\x85\xe6\x87\x86\xdc\x17\x42\x37\xc6\xee\x4e\x59\x6f\xd0\x96\x52\x9d\x04\x38\x63\x2c\xd0\x8a\x51\xb5\x3b\x07\xe1\x16\xbd\xe7\x56\x1d\xa6\x25\x7a\xa6\xd7\xdf\xff\xbf\x7d\x9b\x40\x9e\xc3\xad\x3a\x98\x7d\xbb\x1f\x56\xdd\x92\x80\x29\x2d\x31\x16\xb0\x79\x06\x65\x9f\x81\xb6\xb0\x57\x8f\xc4\xb0\x61\xea\x1c\xb2\x0b\x1d\x3c\x46\x7f\x07\x00\x00\xff\xff\x2f\xd0\x59\x48\x37\x07\x00\x00"

func apiMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_apiMainGoTpl,
		"api/main.go.tpl",
	)
}

func apiMainGoTpl() (*asset, error) {
	bytes, err := apiMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "api/main.go.tpl", size: 1847, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _buildShTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xc1\x4e\xc2\x40\x10\x40\xef\xf3\x15\x03\xf6\xa0\x87\x59\xe4\x6c\x7a\x68\xb0\x81\x1e\x10\x03\x0d\xf1\x46\xb6\xdd\xd9\x76\x4c\xdd\xe2\xee\x42\x34\x84\x7f\x37\x20\x24\x1e\xe4\x34\x99\xe4\xe5\xcd\x9b\xbb\xc1\xa8\x12\x37\xaa\x74\x68\x01\xd6\xf9\x72\x55\x2c\x5e\xd2\xb1\x1a\xab\x47\x98\x2c\xe6\xf3\xa2\x4c\x93\xfb\x46\x22\x7a\xde\xd3\x56\xfb\xc0\x48\x14\xda\xde\x47\x9c\xe5\xd9\xf3\x03\x94\xd9\xf4\x1f\x42\x57\xd5\x69\xf5\x6c\x2f\xd8\x2a\x5f\xae\x8b\x49\xbe\x79\xcd\xca\x59\x7a\x38\xa8\xad\xef\xdf\xb9\x8e\x1b\xa7\x3f\xf8\x78\x04\x10\x8b\x03\x3c\x59\x8c\x58\x4b\xe2\x0c\x7f\x21\xd1\xe7\x4e\x38\x22\x51\xad\xeb\x96\xcd\x59\xf5\x84\xb1\x65\x07\x88\xd7\xba\xdf\x49\x46\x7c\xfc\x56\x60\x05\xa0\xe9\xb1\xda\x49\x67\x90\x3a\x63\x3b\xdd\x04\x1c\xd2\x1b\x26\x7f\x13\x46\x75\xef\xac\x34\x6a\xcf\x3e\x48\xef\xd2\xe4\xf2\x39\xde\x02\xcf\xc2\xeb\xb1\x9b\x54\xd4\x4d\x9a\x94\xd9\x74\x88\x0a\x7e\x02\x00\x00\xff\xff\x3d\x0d\xb9\xe9\x59\x01\x00\x00"

func buildShTplBytes() ([]byte, error) {
	return bindataRead(
		_buildShTpl,
		"build.sh.tpl",
	)
}

func buildShTpl() (*asset, error) {
	bytes, err := buildShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "build.sh.tpl", size: 345, mode: os.FileMode(493), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdDb_migrateGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\x4d\x6b\xdc\x3c\x10\xc7\xcf\xd6\xa7\x98\xc7\x10\xb0\x1f\xb6\x5e\x7a\x5d\xc8\x21\xd9\xa4\xa1\xd0\xe4\x90\x10\x7a\x28\xa5\xc8\xd2\xc8\x51\xa3\x17\x33\x2b\xe7\x85\xc5\xdf\xbd\xc8\xb2\x77\xbd\xdb\x42\x2e\x2d\x94\x5e\x84\xa5\x99\xf9\xcf\xcc\x6f\x76\xa7\xe5\xe2\x91\x37\x08\xc2\x4a\xc6\xb4\x6d\x3d\x05\x28\x58\x96\x2b\x1b\x72\xc6\xb2\xbc\xd1\xe1\xa1\xab\x2b\xe1\xed\xd2\x70\x27\x90\xde\x3d\xea\xb0\xe4\x64\x3d\xbd\x2e\x65\x9d\xbf\xe5\x62\x7c\x73\xe4\xd3\x91\xe2\x4f\xb8\x14\x46\x0f\x09\xb6\xdb\xaa\x25\xff\x1d\x45\xf8\xe6\xb8\xc5\xbe\x5f\x0a\xef\x94\x1e\xa2\x7e\xb6\xc9\x7a\x23\x1e\xd0\xf2\x9c\x95\x8c\xa9\xce\x09\xb0\xba\x21\x1e\x70\x6d\x65\x51\x82\x30\xba\x5a\x7b\x6b\xb9\x93\xb0\x65\xd9\x13\xa7\x9d\x7d\x7c\x3d\x9d\xfb\x6c\x59\x96\xdd\x70\x8b\x2b\x80\x7c\xf4\xcb\x17\x2c\xcb\xee\x37\xbc\xc1\x15\xe4\xbc\x6d\xcd\x2b\xc8\x7a\x14\xd1\xde\xe5\x0b\xc6\xb2\xec\xae\xab\x45\x52\xd8\xac\xe0\xcb\xd7\x23\xc5\x6c\x38\x76\xc2\x5d\x3b\x68\x1e\xab\x76\xed\x5e\x15\xa4\x26\x14\xa3\x7e\x74\x3d\x1b\x2e\x2b\x88\x1d\x16\x02\xfe\x4f\x19\x5c\xc0\x97\x50\x02\x12\x79\x82\x94\x24\x13\xaa\x81\xd5\x29\x24\x66\xd5\x2d\x72\xb9\x1e\x3e\x0b\x51\x5d\x19\x5f\x73\x73\x17\x48\xbb\xa6\xf8\x60\x78\x93\x2c\x65\xc9\x52\x28\x12\xc5\xd0\xb1\xf1\x8b\xf3\x42\xd6\xd5\x75\xba\xdc\xb7\x0b\x10\xaa\x29\x93\xa3\x56\x31\x27\xfc\x77\x0a\x4e\x9b\x29\x71\x46\x18\x3a\x72\xd1\x92\x1e\x7a\x36\x7f\x76\xda\x0c\xf7\x7e\x68\x28\x9d\x87\x5c\xa4\x7f\x76\x47\x64\x24\xf9\x16\xe2\x94\x84\x41\xee\x40\xf2\xc0\x6b\xbe\x41\x18\x67\xfe\x77\xb0\xb9\xf0\xcf\xee\xcf\xd3\x21\x94\xfe\x88\x0e\xe1\x06\xc3\x3f\x06\x65\x2f\xfc\x3b\x7f\x88\x6f\xb1\x8e\x47\xcf\x26\x87\xc3\x0d\xc1\xfa\xc3\xc5\x12\xcb\x99\xfe\x9d\x30\x6b\x58\xd3\x50\xd9\x04\x72\xad\x9a\x32\x61\xbf\x7c\xd1\xe1\x72\x22\x2e\x7c\xe7\xc2\x02\x46\x72\xd3\xf6\x9a\x44\x0a\xa1\x9a\xea\xe2\x3c\x4e\xca\xdd\xdf\x7e\x5a\xec\xf7\x40\xc9\x7e\xd1\xac\xf1\x4d\x75\x85\xa1\x28\xab\xcf\x3a\x3c\x0c\x39\x0a\x24\x2a\xab\xf4\x99\x5f\x4f\xfb\x64\x03\x8a\x6b\x83\x32\x8f\xdc\xc6\x2e\x63\x69\x37\xf8\xbc\xab\xae\x50\x36\x54\x77\x2d\x69\x17\x54\x91\xef\x57\xd1\xc9\x2e\x78\x5e\xce\x02\xde\x97\x6c\x20\xbb\x2f\xe2\xa3\x53\xfe\x50\xe5\xac\x6d\x8d\x46\x09\x27\x32\xca\xcc\x96\x26\x8c\x1c\xf6\x82\x25\x9b\xcf\xa7\x67\x3f\x02\x00\x00\xff\xff\xeb\x83\x34\xdc\x88\x06\x00\x00"

func cmdDb_migrateGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdDb_migrateGoTpl,
		"cmd/db_migrate.go.tpl",
	)
}

func cmdDb_migrateGoTpl() (*asset, error) {
	bytes, err := cmdDb_migrateGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/db_migrate.go.tpl", size: 1672, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x31\x4b\x04\x31\x10\x46\xeb\xcc\xaf\x18\x52\xdd\xe1\x92\xed\x0f\xac\x16\xb4\xb3\x11\x6c\xc4\x22\x97\xcc\xc6\x60\x26\x39\xb2\xc9\x81\x2c\xf9\xef\x92\x5b\xc5\x15\xbb\x99\xf7\x8a\xef\x5d\xb4\xf9\xd0\x8e\xd0\xb0\x05\xf0\x7c\x49\xb9\xa0\x74\xbe\xbc\xd7\xb3\x32\x89\xc7\x9a\x67\x7d\xa5\xd1\x04\x2f\x01\xe6\x1a\x0d\x3e\x52\x99\x12\xb3\x8e\x76\x39\x1c\xf1\xf5\xcd\x04\xaf\xbe\x01\xae\x20\x32\x95\x9a\xe3\x5f\xbe\x82\x10\x0b\xe5\x2b\x4d\x6c\x0f\xc7\x01\x84\x58\x57\x3f\xa3\xb2\x67\x6c\x0d\x84\x60\xef\xb2\x2e\x7b\x4b\xd1\x76\xd3\xa0\x01\x98\x14\x97\x82\x0f\x41\xbb\x29\xc5\xd9\x3b\xbc\x47\x69\x6e\xd7\x2e\xa9\xeb\xdf\x9e\xfe\xfd\x8b\xe9\xb0\x97\xf4\xfb\xb9\x64\x1f\xdd\x0f\x11\x4f\x9a\xe9\x84\xfb\x8d\x3b\x94\x03\x1a\xd9\x6b\xc4\x8b\x0e\x95\x4e\x28\xd5\xb8\xcd\xaa\x4f\xcd\xe1\xa6\xda\xb0\x35\x7e\x05\x00\x00\xff\xff\x0f\x4d\x29\xe0\x46\x01\x00\x00"

func cmdMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdMainGoTpl,
		"cmd/main.go.tpl",
	)
}

func cmdMainGoTpl() (*asset, error) {
	bytes, err := cmdMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/main.go.tpl", size: 326, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdServeGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcb\xae\xd3\x40\x0c\x86\xd7\xe3\xa7\xb0\x66\x95\x70\x4a\xb2\xaf\x74\x16\xa8\x12\x88\x0d\x0b\x10\x62\x89\x06\xd7\x99\x9a\xce\x25\x72\x26\xe5\x52\xe5\xdd\xd1\x34\x01\x9d\x8a\x2e\x63\x7f\xbf\xf3\xfd\x33\x3a\x3a\x3b\xcf\x48\xf1\x08\x20\x71\xcc\x5a\xb0\x01\x63\xbd\x94\xd3\xfc\xad\xa3\x1c\xfb\xe0\x12\xb1\xbe\x3e\x4b\xe9\x9d\xc6\xac\xbf\xfa\x90\xbd\xbd\x67\x66\x1d\xdc\x85\x7b\x0a\x62\x01\x8c\xbd\x5e\xbb\x51\xf3\x77\xa6\xf2\x35\xb9\xc8\xcb\xd2\x53\x4e\x83\xdc\x52\xff\xef\x24\x49\x11\x17\xe4\xb7\x2b\x92\xd3\x63\xe6\x47\xd6\x33\xeb\x64\xa1\x05\x18\xe6\x44\x38\xb1\x5e\xf8\x10\x8f\x4d\x8b\x14\xa4\x3b\xe4\x18\x5d\x3a\xe2\x15\xcc\xc5\xe9\xb6\xdd\x66\xcf\x2f\x89\x2b\x18\xf3\xc1\x45\xde\x23\xa2\xbd\x61\x76\x07\xc6\x7c\x9e\x9c\xaf\x33\x3b\x15\xa7\x65\x42\x8b\x4f\xb8\x3a\x77\x9f\x58\x2f\x42\x5c\x43\xf8\x84\x16\xff\xaa\xd4\xd8\x1b\xaa\xca\xfb\xf5\x7f\xeb\xc7\x0e\xcc\x02\x46\xb9\xcc\x9a\xee\x3c\x60\x79\xa9\xbe\xc2\x0d\xe1\xab\x55\x2e\x15\xfe\x59\x5a\x64\xd5\xac\xb5\x05\x0d\x1e\xf7\xcf\x78\xff\x36\xdd\xfb\x24\xa5\xa1\x16\xc0\x84\xec\x3d\x6b\x45\x42\xf6\xdd\x3b\x2e\x4d\xdb\x7d\x91\x72\x7a\x2b\x1c\x8e\x8d\x75\xe3\x68\x77\x0f\x1a\xd4\x28\x9d\x84\x87\x9a\xdc\x9a\xdc\xae\x1e\xea\xb0\x59\xaf\xee\x90\x06\xdf\x6e\x60\xf7\x71\x4e\x4d\xfb\xaf\x51\x92\x00\x0b\xfc\x09\x00\x00\xff\xff\x50\x20\x83\xd2\x37\x02\x00\x00"

func cmdServeGoTplBytes() ([]byte, error) {
	return bindataRead(
		_cmdServeGoTpl,
		"cmd/serve.go.tpl",
	)
}

func cmdServeGoTpl() (*asset, error) {
	bytes, err := cmdServeGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/serve.go.tpl", size: 567, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configCfgGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x4d\x6f\xe3\x36\x13\x3e\x8b\xbf\x62\x5e\x1d\x16\xf2\x0b\x47\x02\x8a\x9e\x0c\xf8\xe0\xc4\x1b\x60\x8b\x6c\x0a\xe4\xa3\x39\x14\x85\x4d\x4b\x23\x99\x35\x45\xaa\x14\x69\x6f\x36\xf0\x7f\x2f\x86\x94\x6c\x39\x71\xba\xdb\xae\x0e\x86\x34\x1f\xcf\x0c\x67\xe6\x19\xba\xe1\xf9\x86\x57\x08\xb9\x56\xa5\xa8\x18\x13\x75\xa3\x8d\x85\x84\x45\xb1\xd0\x99\xd0\xce\x0a\x19\x33\x16\xc5\x95\xb0\x6b\xb7\x4a\x73\x5d\x67\x95\xbe\xd0\x5f\xbf\xea\x8c\x7e\x2e\xb6\x5c\x8a\x82\x5b\xa1\x55\xb6\xfd\x39\x3e\x35\x94\x5c\xe5\x68\x2e\x36\xc2\x66\xdc\xd4\xda\x3c\x67\x52\x57\xef\xdb\xb8\x1d\x66\xdb\x9f\x62\x16\xbd\xbc\x88\x12\x52\xde\x88\xfd\xfe\x1b\xc6\x59\x63\xb0\x45\xdb\x66\xbc\x11\xde\x11\x55\xf1\xda\xa9\x15\xc6\x35\x2d\x2a\x0a\x6e\x5c\xeb\xe3\xeb\x66\x53\xa5\x42\x65\xcf\xbc\x96\x29\xc5\x1c\x31\x96\x6b\xd5\x5a\xb8\x47\xb3\x15\x39\xde\xf2\x1a\x61\x0a\x71\x1b\x3e\x2f\xda\x9c\x97\xa5\x96\x45\xcc\x58\x96\xc1\x55\x59\x41\xcd\x85\x82\xd6\x1a\x97\x5b\x67\x10\x74\x09\x76\x8d\xc0\x9b\xa6\xab\xa5\x33\xbe\x2a\x29\xb3\xcf\x0d\x7a\x8f\x60\x0c\x2f\x0c\x00\xe0\xe4\x8c\xb3\x46\x90\x0c\x78\x23\xd2\x2b\xef\x0d\x00\xcb\x3f\x5b\xad\x26\x31\x9d\x0c\x28\xcf\xf0\xba\x3c\x9e\xb2\x2f\x54\xb1\x22\x8c\xf9\xa5\x87\x80\xf9\x25\xc5\xea\x9e\x0e\xa3\x58\xf5\x10\xc5\x2a\x5e\xc2\xf1\xc9\x32\x98\x5f\x82\x68\x81\x43\xc1\x2d\x5f\xf1\xd6\x8f\x82\xc2\x9c\x72\xa7\x8c\x85\xaa\xd2\x41\x61\x6f\x74\xc0\x96\xba\x7a\x93\x29\x35\xb7\x0b\x43\xaf\x4b\xc6\xa2\x39\x6e\x3f\xeb\x02\x61\xf8\xac\xb4\x96\x87\xc4\x70\xbb\xa8\x75\x81\x87\xf4\xfa\xef\x25\x8b\xba\x4e\xb4\x9f\x94\xb0\x0f\xa2\x46\xed\x2c\x08\x65\x0f\xe1\xda\xb7\xfa\x1e\xa6\x57\x2d\x84\x12\x76\x61\x3b\x25\x25\x94\x65\xf0\xa4\xcd\x06\x4d\x1b\x4e\x2d\x45\x6b\xa9\x77\xbb\x20\xf4\x06\x76\xcd\x2d\xd4\xae\xb5\xb0\x42\x68\x2d\x37\x16\x8b\x71\x78\x01\x2e\x25\x88\x12\xb0\x6e\xec\x73\xca\xa2\x1e\xeb\xf7\x3f\xdc\x0e\xd3\xf0\xe5\x47\x67\x19\x12\xe9\x60\xe3\x25\xdb\x33\x56\x3a\x95\x43\x92\x97\x15\x4d\xc3\x08\x7e\x0b\xcc\xc1\x64\x04\x68\x8c\x36\xf0\xc2\x22\x83\xd6\x19\x05\x47\x52\xa5\xbd\xd5\xbd\x1f\x9e\xe4\x43\x5e\x56\x63\x16\x1d\x27\x28\x34\x3f\x1a\x78\x5c\x0b\x94\x85\x37\x4c\xe7\x97\xe3\x21\xd6\x1d\xfe\xe5\x84\xc1\x62\x34\x66\xd1\x60\x8a\x4e\xf9\xf6\x0e\xd4\xac\x11\xdf\x85\x75\xde\xfb\x4c\x2f\xdf\x47\x3b\x0f\xd1\x95\x7a\x0c\x1f\xc2\xdb\xc7\x2f\xa2\xb5\x77\x4e\xe2\x0b\x8b\xa2\x68\xb6\xe5\x42\xf2\x95\xc4\xce\x6c\x02\xaf\x25\x84\xbc\x27\xfc\xd1\x99\x5e\x5c\x0b\x29\xe7\x58\x72\x27\x6d\x67\x9e\x8c\xa8\x1f\xa5\x36\xb0\x81\xc9\x14\x0c\x57\x15\xbe\xc1\x24\x93\x68\x90\x1c\x4c\x69\x01\xa0\x2a\x92\x93\x8c\x37\x23\x16\xed\x29\xea\xa0\x65\x7e\x2b\x04\xae\x1e\xf6\x42\x74\xa5\x95\x7a\xbc\xbb\xf1\x34\x09\xdc\xeb\x87\x9d\x48\xb9\x70\x46\xf6\x13\x7e\xf8\x5e\x42\x96\x3d\xac\xf1\x9f\xe9\xfb\x86\x42\x83\xcd\x70\x86\x3e\xaf\x58\x43\x9c\x98\x39\xab\x3f\x8b\xca\x70\x8b\x34\xff\x4b\x6b\x1c\x2e\x01\xbf\x60\xee\x2c\x42\xb1\x82\xba\x53\xba\x06\x7c\x64\x6e\x6c\xca\xa2\xa1\xdb\x90\xf7\xdc\x59\xbd\xe8\x5c\x0e\xdb\x6d\x28\x5b\xb2\xe8\x89\x0b\x7b\xad\x8d\xdf\x6b\x43\xdf\x1d\x17\x76\x51\x6a\xb3\x38\x6e\xb5\xa1\xe8\x15\xd5\x7c\x89\x7f\x8c\x6c\xef\x0c\x64\xd7\xac\x7f\x3b\xc7\xdf\x43\x01\x1a\xd1\x03\xa7\xfc\x59\xee\x90\x17\x61\xdf\x26\x0d\xb7\xeb\xae\xb5\x23\x7f\xaf\xd0\x51\xf8\x2e\x68\xc7\x74\x3c\x1a\xd8\x70\x75\xa7\xe4\x77\x2d\x24\x7a\xaf\x11\x8b\x68\x77\x19\x03\xff\x9b\x82\x12\xd2\x8f\x6f\xb8\x15\xd3\x5b\xdc\x25\xa3\xf4\x49\xd8\xf5\x47\xaa\x4f\x82\xc6\x8c\x52\x62\x16\x89\x42\xfa\x31\x61\xc4\x63\xf0\x50\x5e\x77\xcd\x2d\x97\x49\xec\x14\x71\x02\xac\x06\x83\xbc\xe8\xee\x3f\x28\x85\xc4\xd8\x4f\x3e\x8b\x3a\xd1\x64\x0a\x0a\x77\x09\x75\x84\x45\x94\xc7\xd4\x37\x30\x7d\x54\x35\x37\xed\x9a\xcb\x64\x70\x90\xe0\xf3\xa3\x39\x1b\xbe\x5b\x04\xa4\x78\x0c\x07\xf4\x77\xd2\x77\x7d\x1e\xe7\xce\x10\xf2\x0d\x8a\xf4\x38\x4f\xff\x25\xbf\x2e\xf0\x27\xe5\xfb\x7f\xfa\x87\xa1\x0f\xb7\x08\xad\x9c\xfa\xab\x96\x86\x26\x39\xde\xb9\x14\x63\xd6\x34\x74\xd3\x4c\xa0\x4f\xe9\x46\xd3\x96\xf6\x42\x9a\xbe\x1b\xdc\xa2\x9c\x10\xd5\x07\x7a\x2f\x24\xed\x3d\x2a\x6b\x9e\x27\xa7\xda\x20\x24\xf5\xac\x28\x1e\x0c\xcf\x71\x72\x02\xde\x09\xc9\xe0\x97\xfb\x5f\x6f\x3d\xf8\xd0\x80\x84\x63\x16\xed\xbf\x5d\x93\xbe\x49\xe7\xeb\xf2\x78\x68\x08\x6d\x22\x2a\x40\x28\x4a\xcf\xd8\xff\x77\xff\x56\xf7\xec\xef\x00\x00\x00\xff\xff\x68\xe9\x0e\xef\xbf\x0a\x00\x00"

func configCfgGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configCfgGoTpl,
		"config/cfg.go.tpl",
	)
}

func configCfgGoTpl() (*asset, error) {
	bytes, err := configCfgGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/cfg.go.tpl", size: 2751, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configVersionGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4d\x6b\xdb\x40\x10\x86\xcf\xda\x5f\xf1\x22\x7c\x48\x20\x96\xa0\x47\x83\x0f\x69\x09\xc5\x87\x24\xd0\x98\xd0\x43\x2f\xa3\xd5\x68\xb5\x68\x35\x2b\xf6\x43\x6e\x09\xf9\xef\x45\x56\x4c\x7d\x6c\x8e\xf3\xb0\xef\xcc\x33\xb3\x13\xe9\x81\x0c\x43\x7b\xe9\xac\x51\xca\x8e\x93\x0f\x09\xa5\xb1\xa9\xcf\x4d\xa5\xfd\x58\x3b\x12\xcd\x61\x3b\xd8\x54\xe7\x13\xd7\xf3\x97\x52\xa9\xba\xc6\xb1\x67\xcc\x14\x2c\x35\x8e\x23\x28\x30\x22\x27\x9c\x7a\x16\x68\x3f\x4e\xd6\x59\x31\x48\x3d\xa3\xb1\x42\xe1\x0f\x48\x5a\xe4\xc8\x2d\x92\xc7\x48\x03\x23\xe6\xc0\x38\xf5\x56\xf7\x98\x39\x44\xeb\x05\xbe\x5b\x13\xa4\x07\x96\x16\x36\x22\x64\x11\x2b\xa6\x5a\x26\x3e\xfc\xa6\x71\x72\xbc\x83\xf1\x68\xb2\x75\x2d\xb6\xae\xed\x1c\x99\x88\x72\xfb\x13\x57\x9e\x91\xc3\x6c\x35\x6f\xa3\xa6\xae\xf3\xae\xad\xd7\xf5\xaa\x8f\x39\xfb\xcd\xeb\xc3\x8f\x97\xc3\xf3\xd3\xaf\xa5\xed\xff\x45\xcf\x03\xf7\x9b\x6f\xcf\x8f\x8f\x87\x23\x3e\x11\x4c\x64\xf6\x9b\xe3\xfd\xf7\x12\xd5\xf9\x6e\xe2\x9d\x95\xb4\x33\x5e\xf7\xac\x07\xf1\xc6\xf9\x86\x5c\x54\x33\x05\xdc\xa8\xe2\x72\x8a\x3d\x4a\xa9\xa9\x54\xc5\xba\x29\xfe\x81\x44\x06\xb8\x02\xb7\x4a\x75\x59\x34\xee\xa7\xe9\x20\x9d\xbf\xb9\x45\x3e\x71\xf5\x51\xe1\x4d\x15\x81\x53\x0e\x72\x4d\xdf\x54\x51\x3c\xd1\xc8\xbb\xa5\xcf\xcb\x2a\xbe\xd4\x77\xaa\x28\x5e\x57\x81\xdd\xe5\x53\x16\xf6\x75\x71\x58\x1e\x9f\x65\x16\x72\x24\x73\x0e\x23\x91\xb9\x53\xc5\xbb\x7a\x57\x7f\x03\x00\x00\xff\xff\xfe\xbf\x83\xcf\x4b\x02\x00\x00"

func configVersionGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configVersionGoTpl,
		"config/version.go.tpl",
	)
}

func configVersionGoTpl() (*asset, error) {
	bytes, err := configVersionGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/version.go.tpl", size: 587, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _configWorkersGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x4f\x6b\xdb\x4e\x10\x3d\x6b\x3f\xc5\xfc\x74\xf8\x55\x6a\x1d\x19\x7a\x74\xf1\x21\xa1\x29\x84\x42\x5a\x5a\x48\x0f\xc1\x84\xf5\x7a\x64\x2f\x92\x76\xc5\xec\x4a\x6e\x50\xf4\xdd\xcb\x68\x6d\xc7\x7f\x84\x75\xd4\xce\x7b\x6f\xde\x9b\x99\x5a\xaa\x42\xae\x11\x94\x35\xb9\x5e\x0b\xa1\xab\xda\x92\x87\x44\x44\x31\x12\x59\x72\xb1\x88\x62\xc2\xbc\x44\xe5\x63\x21\xa2\x78\xad\xfd\xa6\x59\x66\xca\x56\xd3\x52\x1a\x85\x74\x53\x68\x3f\x6d\xb6\x38\x6d\x3f\xc7\x22\x15\x42\x59\xe3\x06\x82\x3f\x96\x0a\xa4\x07\x93\xdb\xdf\x48\x2d\x12\x34\x5b\xcc\xc2\xcf\x47\x59\x21\xcc\x21\xd6\x26\xb7\x37\x6e\x78\x8d\x45\xd4\x75\x3a\x87\x4c\xd6\xba\xef\xf7\xe8\xdb\x9f\x0f\x3b\xf0\x08\x5a\xd6\xfa\x18\x8c\x66\xc5\xc0\xc0\xb2\x5a\xbe\x93\x7c\xbd\xfb\x8e\x58\x33\xc7\x08\xc9\x6a\x79\x53\x0c\xaf\x97\x1c\x4e\x57\x75\x89\x2f\xdb\xa1\xfe\x9d\xee\x9b\xb5\x77\x92\xc9\xc6\xe8\x72\x6b\x97\xf2\x98\x2b\x15\xa2\x95\x04\xb7\xad\xd4\xa5\x5c\x96\x18\xca\x1d\xcc\xa1\x92\xf5\xf3\x29\xc1\xc2\x79\x6a\x94\xef\xfa\xee\x32\xbd\x19\x74\xfd\xe4\x9a\xbb\x19\xc0\xbe\xe4\xc4\xc5\x78\x9e\xb3\xf1\xe2\xab\x96\x67\x83\xe7\x13\x58\x2f\x84\x7f\xad\x11\x42\xd9\xfd\x5f\xed\xfc\xaf\xa6\x44\x08\x46\xa0\x13\x51\x85\xce\xf1\x82\x1d\x3e\xe7\x49\x9b\xb5\x88\x2e\x12\xb9\x92\x07\xeb\x4c\xa7\xf0\x24\x4b\xbd\x92\x1e\x41\x6d\x50\x15\x0e\xfc\x46\x7a\xe0\x0d\xd0\x0a\x01\x59\x1c\xac\x01\xbf\x41\x70\xaf\xce\x63\x25\xf2\xc6\x28\x48\x08\x3e\x9e\xf5\x97\x1e\xa8\x92\x56\x96\x0d\x82\x36\x1e\x29\x97\x0a\xbb\x3e\x85\x61\xf1\xb9\x77\x9d\x43\x78\x9e\xcf\xc1\xe8\x12\xde\xde\x60\x77\x0a\xd9\x13\xff\xff\x91\x07\x78\x9a\x3d\xb8\x47\x5d\x26\x29\x83\x22\x42\xdf\x90\x61\x80\x88\x7a\x11\x49\xa2\x09\xd8\x02\x66\xf3\x40\x96\x25\xcf\x8b\x53\x9b\xe9\xa0\xf4\x9f\x2d\x8e\xe1\xe1\xfa\xb2\x47\xdc\x26\xb1\x92\xe6\x83\xe7\x13\x6d\x91\x3c\x94\x83\xcf\x1c\xb6\xbb\xdc\xbc\x85\xe7\x45\x48\x35\x4e\x59\x52\x44\xb9\x25\x78\x99\x40\xcb\xa2\x24\xcd\x1a\x41\xd2\xe0\x88\x85\x5e\xf6\xed\x50\x76\x3e\x83\xb3\xfc\x93\x36\x5d\x7c\x39\x34\x36\xd6\x99\x36\x2d\x07\x79\x18\x82\xe1\x33\x88\xe1\xd3\x6e\xca\x49\x9b\xa6\x22\xe2\x14\xb8\xab\xa3\x60\xc2\x3c\xef\x87\xa0\x1d\x7a\x37\x0c\x2d\xe4\xbe\x5f\x18\xf6\xc0\x7f\xa9\x29\x31\xbb\x32\xc9\x81\x24\xd9\xa3\x82\x6e\x7a\x51\xc7\x0e\x76\xfa\xff\x9f\x3d\xb1\xb7\x1d\x7c\xb6\x57\x9f\x70\xc7\xbd\xf8\x17\x00\x00\xff\xff\x7d\xe2\x34\x8f\x1e\x05\x00\x00"

func configWorkersGoTplBytes() ([]byte, error) {
	return bindataRead(
		_configWorkersGoTpl,
		"config/workers.go.tpl",
	)
}

func configWorkersGoTpl() (*asset, error) {
	bytes, err := configWorkersGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/workers.go.tpl", size: 1310, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dbschemaMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xb1\x6e\x23\x21\x10\x86\xeb\x9d\xa7\x18\xad\xae\xd8\xd5\x2d\xd0\xbb\x3b\xc9\xed\x55\x6e\xd3\x00\x3b\xc6\xc8\x86\x71\x06\x36\x51\x64\xf9\xdd\x23\x63\x6f\xe4\x44\xa1\x1a\x3e\xfe\xf9\xf5\x71\xb6\xfe\x68\x03\xe1\xec\x8a\x3f\x50\xb2\x00\x31\x9d\x59\x2a\x0e\xd0\xf5\x21\xd6\xc3\xe2\xb4\xe7\x64\x4e\x36\x7b\x12\x75\x8c\xd5\x58\x49\x2c\x1f\x66\x76\xfd\xf7\x88\x2c\x8e\xf2\x9b\x29\xaf\x27\x95\x62\x10\x5b\xa9\x87\x11\xc0\x98\xc0\x18\xa8\xa2\x5a\xf0\xf7\xc2\x3d\x4b\xa0\x7b\x70\x13\x28\xd3\x6d\x15\x1b\x44\x17\xf3\x6c\xab\x45\xa5\x62\xc8\x2c\x84\xfa\xef\x8b\x0e\xfc\x07\x95\x3a\x1f\xc3\x97\x35\x2a\x5e\xa3\x3a\x30\xaa\x88\xda\x68\xad\x7f\x54\x06\xde\xa7\x8a\xea\xfd\x29\x0a\xb0\x5f\xb2\xc7\xff\x77\xdf\xc1\x73\xce\xbb\x2a\x58\xaa\xc4\x1c\x26\x9c\xa3\xe0\xec\xf4\xe3\x79\x1b\x65\xc4\x21\xe6\x3a\x21\x89\xb0\x8c\x78\x81\x6e\x76\x7a\x47\xf5\x5f\x29\x54\xcb\xf0\xf8\xb7\x6e\xd7\xfb\x56\xe4\xbc\xe3\x45\x3c\x5d\xa0\xeb\x1a\xdf\x20\x22\xb6\x69\x5a\xd1\x36\xca\x06\xd7\xe9\x46\x1b\x68\xa7\x4f\x6b\x4d\xe9\x27\xe8\xae\x23\x74\x42\x75\x91\xfc\x24\xb6\x7a\x37\xe1\x11\xae\xf0\x19\x00\x00\xff\xff\x9f\x7a\xa8\x60\xd6\x01\x00\x00"

func dbschemaMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_dbschemaMainGoTpl,
		"dbschema/main.go.tpl",
	)
}

func dbschemaMainGoTpl() (*asset, error) {
	bytes, err := dbschemaMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dbschema/main.go.tpl", size: 470, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dockerComposeYamlTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xc1\xaa\xc3\x20\x10\x45\xf7\x7e\xc5\xec\x5c\xc5\x04\xde\xe6\xd5\x75\xff\xa3\x18\x33\x16\x89\x99\x29\x6a\x6c\x4b\xe9\xbf\x97\x68\x08\xd9\xc8\xf5\x9e\xa3\xc3\x14\x8c\xc9\x33\x69\x90\x7f\x52\x88\x84\xb1\x78\x8b\x49\x0b\x00\xc7\x3c\x9a\xb8\x25\x80\x71\xf5\x61\x6a\x11\x60\x62\x3b\x63\x74\x3e\xa0\x86\xeb\x91\x77\x68\x99\x32\xbe\xb2\x06\x55\x0b\xa4\x72\xab\xe6\x8e\x3b\x50\x3d\x52\xe9\x03\x5b\x13\x14\x52\xa9\x7d\xe1\xb0\x2e\x6d\x6a\x93\xe4\xd9\xb2\x4c\xce\xdf\xd5\xdb\x2c\x41\xf7\xa7\x8b\xac\xfa\x83\x63\xde\x5f\x76\x20\xff\x87\xcb\xa0\xb7\xa3\x41\xc2\xfc\xe4\x38\x1f\x3f\x27\x6b\x9c\xe3\x6d\x15\x71\x46\x47\x0d\x9f\xaf\xf8\x05\x00\x00\xff\xff\x4e\x9d\x06\x11\x12\x01\x00\x00"

func dockerComposeYamlTplBytes() ([]byte, error) {
	return bindataRead(
		_dockerComposeYamlTpl,
		"docker-compose.yaml.tpl",
	)
}

func dockerComposeYamlTpl() (*asset, error) {
	bytes, err := dockerComposeYamlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "docker-compose.yaml.tpl", size: 274, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _foobarMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x8b\xdb\x40\x0c\xc5\xcf\xd2\xa7\x10\x3e\x94\xf1\x92\x75\xa0\xc7\xd0\x9e\xd2\x1e\xf6\x12\xca\x6e\xa1\x67\xef\x44\x76\x07\xdb\x23\x23\x6b\xd6\x09\x21\xdf\xbd\xf8\x0f\xdd\x04\x72\x32\x96\xf4\x7b\xef\xcd\xeb\x4b\xdf\x94\x35\x53\x25\xf2\x5e\x2a\x62\xe8\x7a\x51\x23\x87\x90\x59\xe8\x38\x43\x84\xac\x0e\xf6\x37\xbd\x17\x5e\xba\x6d\x5b\x46\xcf\xfa\xdc\x04\xdb\xa6\x91\xb7\x1f\x5f\xb3\xfb\xfd\x10\x34\xf5\x03\xc7\x6d\x2b\xb5\xa6\x21\xc3\x1c\xd1\xce\x3d\xd3\x1f\xd1\x86\x95\x06\xd3\xe4\x8d\x2e\x08\xb1\xec\x98\x88\xd2\xc8\xc5\xb2\x3b\x94\x1d\x23\xb4\x52\xd7\xac\xf4\xb4\xf0\xc5\xcf\x68\x7a\xc6\x2b\x62\x95\xa2\xa7\x03\x8f\xcb\xad\x9b\xe9\x7b\x76\x43\x8f\xd8\x9c\x9e\x56\xeb\x0b\x82\xb2\x25\x8d\xf4\x65\x99\x5c\x10\xe6\x14\x3b\x22\x9a\xbe\x1b\x84\xd5\x7e\xb7\x4a\x6d\x10\xae\xff\xcd\xdd\x71\x7d\x44\x4e\x2f\x31\x98\xcb\x89\x55\xe5\x56\x37\x86\xf6\xd1\xf5\x6b\x8a\x6e\xdc\xdb\x69\xce\xbb\x97\x68\x7c\xb2\x1b\xd8\x82\x9f\xe2\xed\xbe\xd3\x54\x78\x71\xe0\xf1\xf7\x3c\x71\xf3\xef\x1b\x7b\x89\xc7\x1c\x11\xaa\xe5\x1c\x06\x6e\x79\xa9\x10\x7c\x39\x30\x7d\x7b\x5e\x14\x8a\xfd\x0e\x01\xe0\x58\x2c\xd9\x8b\x97\x58\x89\xcb\x7e\xb1\x56\xa2\x1d\x75\x67\xb2\x72\x68\xb2\xfc\x13\x9b\x32\x15\x3f\x24\xb2\xcb\x67\x72\x95\x79\x33\xe9\x5d\xfe\x40\xea\x95\x3d\x87\x0f\x26\x3e\x05\x23\x2f\x47\xde\xd0\x60\xd2\xd3\x28\xda\x84\x58\xcf\xd2\xb7\x55\x00\x5c\xa7\xfe\xf0\x8a\xff\x02\x00\x00\xff\xff\xc2\xf2\xd5\x7e\x65\x02\x00\x00"

func foobarMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_foobarMainGoTpl,
		"foobar/main.go.tpl",
	)
}

func foobarMainGoTpl() (*asset, error) {
	bytes, err := foobarMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "foobar/main.go.tpl", size: 613, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _golangciYmlTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\x4d\xae\xeb\x30\x08\x85\xe7\x59\x85\x37\x10\xa9\xaa\xf4\x26\xd9\x8d\x6b\x53\x07\x15\x83\x65\x48\xfb\xb2\xfb\x2b\xe7\xc7\xcd\xbd\x33\x8e\xf9\x38\x90\x13\x42\x36\xa8\x3a\x2a\x98\x21\x27\x9d\x06\xe7\x92\xbc\xc1\x5a\xe1\x5c\x98\x21\xbc\x46\x9d\x7d\x94\x0f\x72\x9a\x9c\xd5\x05\x36\xa4\x0d\xee\x4c\x46\x1e\x83\xf0\x13\x23\x70\x80\xc9\xdd\xb6\x7e\x58\x03\xc9\x15\xc8\x85\xe0\x3f\xda\x3a\xb9\xfb\xbf\xc1\xb9\xec\x09\x13\x43\xdc\x11\x5d\x52\x02\xb5\x91\xe1\xd3\x77\xc4\xa5\xd0\xde\xb5\xb9\x82\xce\x42\x71\x72\xf7\xdb\x61\x2f\xac\x97\xfd\x04\x3c\xb9\x7b\x97\x12\xc2\x52\x6b\x3b\x47\xdb\xf3\x50\x17\x6e\xac\xbe\xb0\x8c\x11\xab\xee\x83\xa3\x33\xc8\x85\xbc\x81\x0e\xc3\x11\x44\xeb\x00\xfb\x07\xc1\xc9\x24\xd9\x42\x60\x49\x24\x0f\x4f\xfa\x7d\x6e\x27\x74\xf5\xcc\x67\x4d\x44\x47\x95\x51\xb5\x40\x97\x1a\xa4\x40\xdb\xf3\xd7\x19\x19\xed\xeb\xfb\x9b\xa8\x68\x18\x4e\x03\x5b\x09\xb6\x99\xde\xc7\x5c\xa4\x5e\x86\x15\x4e\x78\xe1\x20\xfc\x86\x6a\x5d\x17\x5f\x7d\x6e\xc1\xa2\x5e\x3f\xf0\xfc\x13\x87\x6c\xb1\x1f\x25\xfb\x17\xc4\x0a\x36\xfc\x04\x00\x00\xff\xff\xe0\xad\xce\x0f\x26\x02\x00\x00"

func golangciYmlTplBytes() ([]byte, error) {
	return bindataRead(
		_golangciYmlTpl,
		"golangci.yml.tpl",
	)
}

func golangciYmlTpl() (*asset, error) {
	bytes, err := golangciYmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "golangci.yml.tpl", size: 550, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationInitdbGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xb1\x4e\xc3\x40\x0c\x86\xe7\xde\x53\x58\x37\xb5\x15\x5c\x9e\x80\xa5\x0d\x03\x12\x2c\x48\xcc\xc8\xb9\x38\x87\x69\x62\x47\xce\x1d\x52\x89\xf2\xee\x28\x69\x17\x46\x4b\xdf\xe7\xff\x1b\x31\x5e\x30\x11\xb0\x70\x66\xec\xf9\x17\x33\xab\x38\xc7\xc3\xa8\x96\x61\xef\x76\x3e\x71\xfe\x2a\x4d\x88\x3a\x54\x3d\x4a\x24\x7b\xbc\x70\xae\xd0\x06\xb5\x6b\xd5\x36\xfe\x3f\x32\xb1\x95\x71\x22\xa9\x7a\x4d\x56\x26\xef\xdc\xce\xcf\x73\x18\x4d\xbf\x29\xe6\x4f\xc1\x81\x96\xa5\x8a\x2a\x1d\x27\xef\x0e\xce\xfd\xa0\xad\x33\xf5\x09\x60\xab\x78\xd3\xb6\xf4\x04\x4f\xe0\x5b\xcc\xd8\xe0\x44\x10\x55\x84\xe2\x1a\xb6\x19\x5d\x91\xb8\xa1\xf5\x1d\xd8\xc7\x2e\xc1\xf1\xf6\x33\x9c\xbb\xf4\x00\x24\xd9\xae\x70\xbc\x35\x84\xe7\xf5\x3a\x00\x99\xa9\xc1\xec\x76\x46\xb9\x98\x40\xdb\x84\x17\xe1\xbc\xda\xa1\x3e\x85\xb3\x8a\x7c\xbc\xbf\xde\xe5\x83\x5b\xdc\x5f\x00\x00\x00\xff\xff\xdc\x49\x35\x74\x1d\x01\x00\x00"

func initializationInitdbGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationInitdbGoTpl,
		"initialization/initdb.go.tpl",
	)
}

func initializationInitdbGoTpl() (*asset, error) {
	bytes, err := initializationInitdbGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/initdb.go.tpl", size: 285, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initializationMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\xdc\x36\x10\x85\xcf\xe4\xaf\x98\x08\x48\x2b\xb9\x2a\x17\x3d\xf4\x12\x40\x07\x7b\x37\x35\x0c\x34\x17\xbb\x41\x0e\x45\x51\x70\xa9\xa1\xcc\x9a\x22\x05\x6a\x64\x77\x2b\xe8\xbf\x17\x24\xb5\xde\xd8\xdd\x26\x39\x69\x57\x7c\xfa\x66\xe6\xcd\x93\x06\xa9\x1e\x64\x87\x60\x9c\x21\x23\xad\xf9\x47\x92\xf1\x8e\x73\xd3\x0f\x3e\x10\x94\x9c\x15\xba\xa7\x82\xb3\x62\x3c\x38\x15\xaf\x64\x7a\x2c\x38\x67\x45\x67\xe8\x7e\xda\x0b\xe5\xfb\x8d\x95\x4e\x61\xf8\xf1\xc1\xd0\x46\x86\xde\x87\xc3\xc6\xfa\xae\xf8\x9a\x86\xbc\xb7\xe3\x2b\xd5\x68\xc2\x34\x8c\xe8\x22\x20\x4c\xaf\x4f\xa7\xa0\xe5\x23\x6e\x94\x35\xa9\x83\x79\x16\x43\xf0\x7f\xa1\xa2\x3f\x9d\xec\x71\x59\x36\xca\x3b\x6d\x52\xe5\xff\x9e\xb5\xfb\x51\xdd\x63\x2f\x0b\x5e\x71\x4e\x87\x21\x0f\xfd\xc1\xb7\x93\x45\x18\x29\x18\xd7\x71\xce\x95\x77\x23\x81\xb6\xb2\xdb\x26\x16\x34\x50\x1c\xa9\xf9\xac\x45\x2d\x27\x4b\x37\xce\xd0\x8d\x23\x0c\x8f\xd2\x42\x03\x3f\xc3\x05\x44\x6b\xc4\x1d\x2a\xef\x5a\xce\xf5\xe4\x14\x44\x51\xa9\xe0\x42\x59\x23\xb6\xde\x11\xfe\x4d\x15\x5c\x64\x9e\xd8\xea\x0e\x66\xce\x1e\x65\x48\x9d\xe4\x7a\x23\x34\xd0\xcb\xe1\xf7\x53\x6f\x7f\x44\x52\xf9\xd9\x43\x35\x5c\x64\x77\xc4\x7b\x47\xe1\x50\x01\x86\xe0\xc3\xcc\x19\x00\xc0\x3c\x1b\x0d\xa2\xdd\x2f\x0b\x67\x6c\x77\xf5\x0e\x20\xc1\x77\x92\xe4\x5e\x8e\x58\x73\xc6\xe6\x19\x5d\x1b\xcf\x17\xce\x99\xd2\x1d\xbc\x6b\x60\xa5\xdf\xa2\x6c\x73\x1f\xa5\x12\xd7\xd6\xef\xa5\xbd\x4b\xce\x94\x27\x47\xaa\x8a\x73\xf6\x94\x9e\x8a\x99\x10\x9f\xa4\xa1\xeb\xe0\xa7\x61\x5e\x38\xd3\x3e\x40\x9f\xda\xae\x4f\x99\xc2\x10\xc5\x41\xba\x35\x68\xc7\x49\x67\xce\xd2\xf4\xd1\x37\x3f\x51\xf6\x6f\x37\x85\x9c\x41\xc6\x8c\x5e\x59\xd0\x34\xb0\xbb\x4a\x7a\x76\x14\x37\x2f\xe5\xa5\xd2\x9d\xd8\x5d\x89\xe8\xf8\x6f\x59\x52\xbd\x5a\x09\x63\x0b\xa0\x1d\xf1\xeb\x9c\x3b\x0c\x8f\x46\xe1\xf8\x65\x18\xe7\x8c\x3d\x75\xe2\xb2\x6d\xcb\x9f\xa2\x27\xac\xf3\x90\x76\xb5\x36\x7d\x5a\xe1\x4b\x2f\xbe\x6d\x9f\xf5\x79\x5b\xaa\xdc\x7d\x8b\x1a\x03\x3c\x75\x62\xe7\x1d\x96\x55\xbc\xe5\x1f\xa2\xcb\xe9\xa5\x12\xb7\x48\xe1\x70\xe3\x54\xc0\x1e\x1d\x49\x6b\x0f\x1f\x1d\x19\x5b\x46\x1d\x3b\x13\xe0\x3a\x1d\xac\x05\x6b\x9e\xfe\xa5\x36\x2b\xd8\x7b\x6f\x73\x4d\xc6\x30\xa4\x4d\x7e\x36\x4c\xf9\x9d\x8a\x03\x58\xdf\x89\x6b\xa4\xb2\xaa\xb2\xd0\xe8\x38\x04\xbc\x69\xc0\x99\xe7\xa7\xd9\xb3\x4a\x7c\x32\x74\xff\x3e\x4e\x59\x62\x08\x95\xc8\x3f\x8b\xad\x74\xdf\x53\xa2\x43\x01\x3f\xac\xbb\x5f\x89\x4b\xbe\x04\xa4\x29\xb8\x04\x6f\x12\x3c\xdd\x5e\x92\xc8\x68\x78\xe3\x1f\xd6\x6a\xa7\x5a\xbf\x48\x92\xf6\x4b\xf0\x88\x5e\xca\x33\xa9\x7d\x5e\x41\x95\xdf\x95\xa7\x2e\x85\xbd\xac\x38\x7f\xfd\xaa\x19\x0d\x6b\x00\x2f\x27\xf2\x1f\x4c\x17\x24\xe5\xa0\x29\x3f\x39\xaa\x61\xb5\xee\xf8\x11\x12\xab\xe4\x18\xdb\xad\x77\xee\xe3\xed\xaf\x35\x14\xd3\x50\x54\xfc\xac\x83\xff\x6b\xdf\x3a\x61\x46\x1a\xef\x46\xd0\xd2\x58\x6c\x13\xe8\x68\x59\x5c\xd4\x31\xb5\x27\xd2\x8d\xd3\xbe\xd4\x3d\x89\xbb\x21\x18\x47\xba\x2c\x2e\x87\xc1\x1a\x6c\xe1\x6d\x0b\x6f\x47\xe8\x8f\xcc\xa2\x86\x75\x92\xd4\x61\x72\xe4\xf9\x4b\xc2\x5f\x14\x59\xf8\xbf\x01\x00\x00\xff\xff\xd9\x8d\x60\x11\x56\x06\x00\x00"

func initializationMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_initializationMainGoTpl,
		"initialization/main.go.tpl",
	)
}

func initializationMainGoTpl() (*asset, error) {
	bytes, err := initializationMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "initialization/main.go.tpl", size: 1622, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4d\x4b\x24\x31\x10\x86\xcf\xa9\x5f\x51\x1b\x58\x48\x98\x25\x73\x5f\xe9\x43\x23\x8c\x78\x19\x44\xd1\x93\x20\x31\x93\xc4\x68\xbe\x48\xd2\xe3\x61\xe8\xff\x2e\xe9\xa6\x41\xd0\x53\xa8\x7a\x9e\x97\x37\x49\x96\xea\x43\x5a\x8d\x41\xba\x08\xe0\x42\x4e\xa5\x21\x03\x42\x4d\x68\x14\x08\xf5\xc9\xf6\x23\x55\x0a\x40\xa8\x75\xed\x6d\x7a\x15\x2a\x85\xfd\x54\x8c\x3c\xeb\xbd\xf2\x6e\x21\x97\x8b\xc8\x25\xbd\x6b\xd5\x5e\xa2\x0c\x7a\x9e\xf7\x2a\x9c\xe8\xef\x20\x45\xe3\x2c\x05\x0e\x60\xa6\xa8\x96\x6a\xc6\xf1\x02\xc4\x84\x26\xee\x8a\x8b\xcd\x30\xfa\x77\x77\xc6\xe7\x48\xff\xe1\xaa\x8b\x31\xe7\xdb\x68\x12\xe3\x1c\x80\xc8\x9c\xf1\xff\x80\xca\x3b\x71\xd4\x9f\x63\xce\x8c\x2f\x4b\xf1\x58\xfb\x63\x06\xa4\x23\x52\xdc\x6d\xd9\x07\x5d\xce\x4e\xe9\xa3\x0c\x1a\x77\x48\xb1\xae\x33\x5d\x33\x4f\xba\x54\x97\x22\x0e\x3f\xaa\x36\xb4\x7a\x07\x2f\x6d\xed\x56\x38\x89\x1b\xdd\x96\x71\xeb\xbd\x4e\x21\xc8\x78\xfa\x86\xb7\x4d\x37\x9c\x41\x5d\x4a\xbf\x71\x77\xef\xa7\xc8\x52\x15\x63\xb1\x95\x5f\x2d\xe0\xcf\x80\xd1\xf9\xfe\x03\xc4\x27\x2b\x0e\xb2\x49\xcf\x74\x29\x1c\xc8\x0c\x30\xc3\x57\x00\x00\x00\xff\xff\x8a\x04\x9d\xec\xa5\x01\x00\x00"

func mainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_mainGoTpl,
		"main.go.tpl",
	)
}

func mainGoTpl() (*asset, error) {
	bytes, err := mainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.go.tpl", size: 421, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _modelsQueryGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xc1\x6e\xc2\x30\x0c\x86\xcf\xcd\x53\x58\x1c\x26\xa8\xb6\xf6\x8e\xc4\x69\x93\x36\xa4\x69\xa8\x1a\x0f\x80\x9b\xb8\x60\x91\x26\x5d\xe2\x0e\xb1\x89\x77\x9f\xd2\x96\x41\x6e\x76\xfc\x7d\xfe\xe5\x0e\xf5\x11\xf7\x04\xad\x37\x64\xa3\x52\xdc\x76\x3e\x08\xcc\xf6\x2c\x87\xbe\x2e\xb4\x6f\x4b\x8b\x4e\x53\x78\x3a\xb2\x94\x18\x5a\x1f\xce\xa5\xa9\x67\x4a\x95\x25\x54\x6b\xe0\x08\x08\xe2\x3b\xb0\xf4\x4d\x16\xd8\x09\x85\x06\x35\x41\xe3\xc3\x58\xa1\x16\xf6\x0e\x4e\x2c\x07\x30\x28\x58\x63\xa4\x42\xc9\xb9\xa3\x81\xff\x07\x7e\x55\x66\xea\x62\x1b\xd0\xc5\x11\x41\xab\x54\x56\xe6\x0a\x86\xb7\xdd\xbc\x6c\x96\xf0\x46\x81\xd2\x4e\x47\x64\xc8\x80\x78\x40\x63\x40\x0e\x04\x5f\x3d\x85\xf3\x4d\x17\x07\x2c\x2f\xd5\x65\x4c\x0a\xdc\x76\x96\x5a\x72\x82\x43\x1c\xdf\x0c\xd4\xae\x5a\xef\x6e\xd0\x35\x16\x44\x09\xbd\x96\x14\x29\x37\x75\xf1\x59\xbd\x3f\x7b\xe7\x26\xd5\x07\x9d\x2a\x08\x24\x7d\x70\x11\xd8\xb1\x30\x5a\xfe\x21\x03\xec\xa2\xa4\x53\xdd\xbb\x0b\xd5\xf4\x4e\x0f\xcc\xdc\xd4\xc9\x02\x77\xc6\x05\xe4\x55\x5a\xc2\x0d\x4c\x9f\xab\x15\x38\xb6\xa9\x97\x5d\x3b\x60\xea\xe2\x95\x24\x15\xa4\xc5\x87\xf9\x42\x65\x17\x95\x8d\x09\xe0\xa1\x4a\xb3\x93\x6f\x39\x69\x1e\xd3\xc4\x45\xfd\x05\x00\x00\xff\xff\x7e\x24\x9c\xd9\xdc\x01\x00\x00"

func modelsQueryGoTplBytes() ([]byte, error) {
	return bindataRead(
		_modelsQueryGoTpl,
		"models/query.go.tpl",
	)
}

func modelsQueryGoTpl() (*asset, error) {
	bytes, err := modelsQueryGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "models/query.go.tpl", size: 476, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersChiefGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\x41\x6b\xdc\x3c\x10\x3d\x4b\xbf\x62\xd0\xc9\x0e\xfe\x64\xf8\x8e\x81\x1c\xd2\x34\x69\x17\xb6\xa5\x34\x94\x3d\x2e\x8a\x3c\xf6\xaa\xab\x95\xcc\x58\xf6\x12\x8c\xff\x7b\xb1\x64\x37\x5d\xd8\x06\x7a\xf3\xcc\xbc\x79\xef\xc9\xf3\x5a\xa5\x8f\xaa\x41\x38\x7b\x3a\x22\x75\x9c\x9b\x53\xeb\x29\x40\xc6\x99\x68\x4c\x38\xf4\x2f\x52\xfb\x53\x69\x95\xd3\x48\xff\x1d\x4d\x28\xfb\x33\x96\xc3\xff\xe2\x72\xde\x19\xea\xdb\x0e\x5d\x69\x7d\x43\x7d\x27\x38\x67\x62\x1c\x65\x4b\xfe\x27\xea\xb0\x77\xea\x84\xd3\x54\x6a\xef\x6a\xd3\x08\xce\xc6\xd1\xd4\x20\x55\x6b\xa6\xe9\x0a\x6c\xf1\x52\xaa\xd6\x88\x71\x44\x57\x4d\xd3\xbc\xf2\x37\x58\xed\xfd\x8b\x22\xc1\x73\xce\xeb\xde\x69\xd8\x38\x13\x1e\x0e\x06\xeb\xcc\xfa\xa6\x41\x82\x9b\x64\x4a\x3e\xba\x40\xaf\x05\xe8\xba\x81\x9b\x64\x45\x3e\xd4\x4d\x0e\xfd\x19\x65\x5c\x80\x91\x33\x1d\x3f\x6e\xef\x62\xf7\x2b\x9e\x13\x53\xbe\x0c\xe4\x8f\x0e\x3f\x62\xad\x7a\x1b\xbe\xa3\xf6\x03\xd2\xdb\xe8\x19\xc3\xe3\x80\x2e\x7c\x56\xae\xb2\x48\xd9\x6c\x26\xc3\xb9\x13\xb9\xe2\x2c\x9f\x25\xd8\xa0\x08\x2c\x0e\x68\x61\x71\xb6\x9d\x0b\xce\x58\x77\x36\x41\x1f\x20\x2e\xa5\x66\xc4\x6b\xd5\x61\xe4\xd8\x0e\xf6\x49\x05\x65\x8b\xb5\x7a\x24\xf2\x74\xcb\x19\x63\x89\xef\x6e\x65\x8c\x83\x95\xf6\xcf\xfd\x8d\xab\xfd\xb5\x85\xb9\xbf\xe2\xab\xf4\xc2\x6b\xb0\x9d\x22\xb7\xc2\x26\xce\x19\x4b\xff\x58\xee\x4c\x38\x3c\x19\xb4\x55\x97\x9e\x2c\x53\x91\xcb\x99\x63\xeb\x9b\x2c\xf2\x14\xcb\xd3\xbe\x60\xd7\xa9\x06\x73\xce\xa6\x9c\x73\x00\x80\x98\x08\x4f\x31\x14\x20\x3b\x73\x6a\x2d\xee\xd3\x85\xa7\x69\xb9\x63\x34\x71\x21\x96\x09\xd5\xb6\x7b\xab\x5e\x91\x44\x01\x62\x49\x84\xc8\xd7\xd4\xbc\x51\xa7\xb0\xa5\x43\xdd\x57\xd5\x2e\x22\xb3\x25\x05\xa9\xba\xff\xb6\x79\x46\x1a\x90\x0a\x50\xad\x91\x9f\x30\xa4\x32\xd3\x75\x53\x5c\x91\x4e\x6a\xa2\x80\x0b\x96\x27\xef\x3f\x28\xca\xf3\xdf\x1e\xd8\xbb\xa2\x09\x5e\x40\x0a\xf1\x1c\xb8\xf7\x50\xff\x6c\x82\x33\xc2\xd0\x93\x83\x68\x82\x4f\xfc\x57\x00\x00\x00\xff\xff\xe3\x63\x1d\x2f\xf0\x03\x00\x00"

func workersChiefGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersChiefGoTpl,
		"workers/chief.go.tpl",
	)
}

func workersChiefGoTpl() (*asset, error) {
	bytes, err := workersChiefGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/chief.go.tpl", size: 1008, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _workersFoobarMainGoTpl = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x8b\xdb\x30\x10\x85\xcf\x9a\x5f\x31\xf8\x50\xe4\x90\xb5\xa1\x47\xd3\x1e\x4a\xb6\x85\xbd\x64\xcb\xee\x42\xcf\x8a\x3c\x76\x45\x6c\x8d\x91\x47\xeb\x84\x90\xff\x5e\x6c\x99\x6e\x16\x72\xb1\x91\xf4\xde\x7c\x6f\xde\x60\xec\xd1\xb4\x84\x0d\xf3\xc1\x04\x00\xd7\x0f\x1c\x04\x35\xa8\x4c\x5c\x4f\x19\x80\xca\x5a\x27\x7f\xe3\xa1\xb0\xdc\x97\x9d\xf1\x96\xc2\xc3\xd1\x49\x19\x27\x2a\xdf\xbf\x66\x9f\xdf\x47\x17\xe2\x30\x92\x2f\x3b\x6e\x43\x1c\x33\xc8\x01\xe4\x3c\x10\xfe\xe1\x70\xa4\x80\xa3\x84\x68\x05\x2f\xa0\xbc\xe9\x09\x11\xe3\x44\x45\x7a\xdb\x9b\x9e\x40\x75\xdc\xb6\x14\x70\x93\xfc\xc5\x4f\x2f\xe1\x0c\x57\x80\x26\x7a\x8b\x7b\x9a\x92\x56\x2f\xee\xcf\xde\x2d\xde\xf3\xe6\xb8\x59\xd1\x17\x50\x81\x24\x06\x8f\x5f\xd2\xcd\x05\xd4\x92\xa2\x42\xc4\xf9\xbf\x05\xb5\xe2\xab\x75\xd4\x16\xd4\xf5\x3f\x5c\xd7\xeb\x12\x39\x3e\x79\x27\x3a\x47\x0a\x81\x6f\xe7\x7a\xd7\xdd\x53\xbf\x44\xaf\xa7\x9d\x9c\x96\xbc\x3b\xf6\x42\x27\xb9\x31\x8b\xb3\x73\xbc\xea\x3b\xce\x85\x17\x7b\x9a\xde\x96\x1b\xbd\x1c\x5f\xc9\xb2\xaf\x73\x00\xd5\x24\xb9\x1a\xa9\xa3\x54\xa1\xb2\x66\x24\xfc\xf6\x90\x26\x14\xbb\x0a\x94\x52\x75\x91\xb2\x17\x4f\xbe\x61\x9d\xfd\xa6\xd0\x70\xe8\xb1\x3f\xa3\x98\xf1\x98\xe5\xb3\xa6\xdc\xcc\x5f\x44\xc4\xb7\xe7\xc7\xe7\x0a\x7f\xd4\x35\xfe\x62\xc6\x83\x09\x38\xa5\xb6\x3a\x6e\x9d\x9d\x55\x9b\xf2\x03\x34\x6f\x51\x3c\xb2\x27\x9d\x2f\xac\x15\xfc\x2a\x3c\xe8\xfc\x0e\xfc\x85\x2c\xb9\x77\x42\x3a\x39\x41\xcb\x35\x6d\x71\x14\x1e\x16\x86\xf3\x6d\x0a\x73\x53\x9e\x52\xd7\xb9\x71\xb8\xc2\xbf\x00\x00\x00\xff\xff\x61\x6a\x37\xb0\x97\x02\x00\x00"

func workersFoobarMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_workersFoobarMainGoTpl,
		"workers/foobar/main.go.tpl",
	)
}

func workersFoobarMainGoTpl() (*asset, error) {
	bytes, err := workersFoobarMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "workers/foobar/main.go.tpl", size: 663, mode: os.FileMode(420), modTime: time.Unix(1594736314, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".gitattributes.tpl":           GitattributesTpl,
	".gitignore.tpl":               GitignoreTpl,
	"Dockerfile.tpl":               dockerfileTpl,
	"api/main.go.tpl":              apiMainGoTpl,
	"build.sh.tpl":                 buildShTpl,
	"cmd/db_migrate.go.tpl":        cmdDb_migrateGoTpl,
	"cmd/main.go.tpl":              cmdMainGoTpl,
	"cmd/serve.go.tpl":             cmdServeGoTpl,
	"config/cfg.go.tpl":            configCfgGoTpl,
	"config/version.go.tpl":        configVersionGoTpl,
	"config/workers.go.tpl":        configWorkersGoTpl,
	"dbschema/main.go.tpl":         dbschemaMainGoTpl,
	"docker-compose.yaml.tpl":      dockerComposeYamlTpl,
	"foobar/main.go.tpl":           foobarMainGoTpl,
	"golangci.yml.tpl":             golangciYmlTpl,
	"initialization/initdb.go.tpl": initializationInitdbGoTpl,
	"initialization/main.go.tpl":   initializationMainGoTpl,
	"main.go.tpl":                  mainGoTpl,
	"models/query.go.tpl":          modelsQueryGoTpl,
	"workers/chief.go.tpl":         workersChiefGoTpl,
	"workers/foobar/main.go.tpl":   workersFoobarMainGoTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".gitattributes.tpl": {GitattributesTpl, map[string]*bintree{}},
	".gitignore.tpl":     {GitignoreTpl, map[string]*bintree{}},
	"Dockerfile.tpl":     {dockerfileTpl, map[string]*bintree{}},
	"api": {nil, map[string]*bintree{
		"main.go.tpl": {apiMainGoTpl, map[string]*bintree{}},
	}},
	"build.sh.tpl": {buildShTpl, map[string]*bintree{}},
	"cmd": {nil, map[string]*bintree{
		"db_migrate.go.tpl": {cmdDb_migrateGoTpl, map[string]*bintree{}},
		"main.go.tpl":       {cmdMainGoTpl, map[string]*bintree{}},
		"serve.go.tpl":      {cmdServeGoTpl, map[string]*bintree{}},
	}},
	"config": {nil, map[string]*bintree{
		"cfg.go.tpl":     {configCfgGoTpl, map[string]*bintree{}},
		"version.go.tpl": {configVersionGoTpl, map[string]*bintree{}},
		"workers.go.tpl": {configWorkersGoTpl, map[string]*bintree{}},
	}},
	"dbschema": {nil, map[string]*bintree{
		"main.go.tpl": {dbschemaMainGoTpl, map[string]*bintree{}},
	}},
	"docker-compose.yaml.tpl": {dockerComposeYamlTpl, map[string]*bintree{}},
	"foobar": {nil, map[string]*bintree{
		"main.go.tpl": {foobarMainGoTpl, map[string]*bintree{}},
	}},
	"golangci.yml.tpl": {golangciYmlTpl, map[string]*bintree{}},
	"initialization": {nil, map[string]*bintree{
		"initdb.go.tpl": {initializationInitdbGoTpl, map[string]*bintree{}},
		"main.go.tpl":   {initializationMainGoTpl, map[string]*bintree{}},
	}},
	"main.go.tpl": {mainGoTpl, map[string]*bintree{}},
	"models": {nil, map[string]*bintree{
		"query.go.tpl": {modelsQueryGoTpl, map[string]*bintree{}},
	}},
	"workers": {nil, map[string]*bintree{
		"chief.go.tpl": {workersChiefGoTpl, map[string]*bintree{}},
		"foobar": {nil, map[string]*bintree{
			"main.go.tpl": {workersFoobarMainGoTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
